// + Corex Французова 26.07.2022 (Доработка 820)
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	МассивНазначений = Новый Массив;
	МассивНазначений.Добавить("Документ.РеализацияТоваровУслуг");
	
	ПараметрыРегистрации.Вставить("Вид", "ПечатнаяФорма"); //возможны варианты - ЗаполнениеОбъекта, ДополнительныйОтчет, СозданиеСвязанныхОбъектов,
	ПараметрыРегистрации.Вставить("Назначение", МассивНазначений);
	ПараметрыРегистрации.Вставить("Наименование", "Накладная на товары Corex UKREN"); //имя под kt обработка зарегистрирована будет в справочнике внешних обработок
	ПараметрыРегистрации.Вставить("Версия", "1.1.4");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", ЛОЖЬ);
	ПараметрыРегистрации.Вставить("Информация", "Дополнительная печатная форма к документу РеализацияТоваровУслуг ");
	
	//команды
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление"); //как будет выглядеть описание печ.формы для пользователя
	ТаблицаКоманд.Колонки.Добавить("Идентификатор"); //имя нашего макета
	ТаблицаКоманд.Колонки.Добавить("Использование"); //ВызовСерверногоМетода
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение"); //Истина
	ТаблицаКоманд.Колонки.Добавить("Модификатор"); //ПечатьМХL
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = "Накладная на товары Corex UKREN";
	НоваяКоманда.Идентификатор = "НакладнаяТоварыUKREN"; //Внешняя печатная форма
	НоваяКоманда.Использование = "ВызовСерверногоМетода"; //здесь можно прописать использование как серверного так и клиентского, отличие в том, что серверный метод будет обращаться к экспортной процедуре из модуля объекта, клиентский - к экспортной процедуре из модуля формы объекта
	НоваяКоманда.ПоказыватьОповещение = Истина;
	НоваяКоманда.Модификатор = "ПечатьMXL";
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции
// - Corex Французова 26.07.2022 (Доработка 820)
// + Corex Французова 26.07.2022 (Доработка 820)
Функция СформироватьЗаголовокДокумента(ДокументОбъект, НазваниеДокумента = "", КодЯзыка = Неопределено) Экспорт
	
	Если КодЯзыка = Неопределено Тогда 
		КодЯзыка = Локализация.ПолучитьЯзыкФормированияПечатныхФорм();
	КонецЕсли;
	
	Если ДокументОбъект = Неопределено Тогда
		Возврат "";
	Иначе
		Возврат ?(НЕ ЗначениеЗаполнено(НазваниеДокумента), ДокументОбъект.Метаданные().Синоним, НазваниеДокумента) + " № "
		+ ПрефиксацияОбъектовКлиентСервер.ПолучитьНомерНаПечать(ДокументОбъект.Номер, Истина, Истина)
		+ НСтр("ru=' от ';en=' dated ';uk=' від '",КодЯзыка) + Формат(ДокументОбъект.Дата, "ДФ='дд ММММ гггг';Л="+ ОпределитьКодЯзыкаДляФормат(КодЯзыка)) + НСтр("ru=' г.';en=' ';uk=' р.'",КодЯзыка);
	КонецЕсли;
	
КонецФункции // СформироватьЗаголовокДокумента()
// - Corex Французова 26.07.2022 (Доработка 820)
// + Corex Французова 26.07.2022 (Доработка 820)
//Преобразует код языка в формат понятный системной фунции Формат()
// Параметры
//  КодЯзыка  	 – Строка – код языка в формате uk/ru
//
// Возвращаемое значение:
//   Строка   	 – код языка в формате ru_RU/uk_UA
//
Функция ОпределитьКодЯзыкаДляФормат(КодЯзыка) Экспорт
	
	Возврат ?(КодЯзыка = "uk","uk_UA",?(КодЯзыка = "en","en_US","ru_RU"));
	
КонецФункции 
// - Corex Французова 26.07.2022 (Доработка 820)

Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм,ОбъектыПечати, ПараметрыВывода) Экспорт

	// Устанавливаем признак доступности печати покомплектно.
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;

	// Проверяем, нужно ли для макета ОтчетККМ формировать табличный документ.
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяТоварыUKREN") Тогда
		// Формируем табличный документ и добавляем его в коллекцию печатных форм.
		ИмяМакета = "";
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"НакладнаяТоварыUKREN",
			"Накладная на товары Corex UKREN",
			ПечатьНакладнаяТоварыUKREN(МассивОбъектов, ОбъектыПечати),
			,
			ИмяМакета);
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьНакладнаяТоварыUKREN(МассивОбъектов, ОбъектыПечати)
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Ссылка.Номер КАК Номер,
	|	Товары.Ссылка.Дата КАК Дата,
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Контрагент КАК Контрагент,
	|	Товары.Ссылка.ВалютаДокумента КАК ВалютаДокумента,
	|	Товары.Ссылка.АдресДоставки КАК АдресДоставки,
	|	Товары.Ссылка.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Товары.Ссылка.ДоговорКонтрагента.НаименованиеДляПечати КАК ДоговорКонтрагента,
	|	Товары.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(Товары.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
	|	Товары.Количество КАК Количество,
	|	Товары.Цена КАК Цена,
	|	Товары.Сумма КАК Сумма,
	|	Товары.СуммаНДС КАК СуммаНДС
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Товары КАК Товары
	|

	|ГДЕ Товары.Ссылка = &ТекДок
	|";
	Запрос.УстановитьПараметр("ТекДок",МассивОбъектов[0]);
	ТабДокумент = Новый ТабличныйДокумент;
	Результат = Запрос.Выполнить().Выгрузить();
	Макет = ПолучитьМакет("НакладнаяТоварыUKREN");
	ОбластьЛоготип          = Макет.ПолучитьОбласть("ЛоготипИюль2020");         
	ОбластьЗаголовок        = Макет.ПолучитьОбласть("Заголовок");        
	ОбластьПоставщик        = Макет.ПолучитьОбласть("Поставщик");       
	ОбластьПокупатель       = Макет.ПолучитьОбласть("Покупатель");  
	ОбластьДоговорПроект    = Макет.ПолучитьОбласть("ДоговорПроект");           
	ОбластьАдресДоставки    = Макет.ПолучитьОбласть("АдресДоставки");  
	ОбластьПустая1          = Макет.ПолучитьОбласть("Пустая1");
	ОбластьШапкаТаблицы     = Макет.ПолучитьОбласть("ШапкаТаблицы");       
	ОбластьСтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
	//ОбластьПодписи              = Макет.ПолучитьОбласть("АдресДоставки");
	СтруктураШапки = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат[0]);
	ПолучитьСтруктуруСоответствиеUKREN(СтруктураШапки) ;
	
	ЗаполнитьЗначенияСвойств(ОбластьЛоготип.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьПоставщик.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьПокупатель.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьДоговорПроект.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьАдресДоставки.Параметры,СтруктураШапки);
	ЗаполнитьЗначенияСвойств(ОбластьШапкаТаблицы.Параметры,СтруктураШапки);

	//ЗаполнитьЗначенияСвойств(ОбластьЛоготип.Параметры,СтруктураШапки);
	
	ТабДокумент.Вывести(ОбластьЛоготип);
	ТабДокумент.Вывести(ОбластьЗаголовок);
	ТабДокумент.Вывести(ОбластьПоставщик);
	ТабДокумент.Вывести(ОбластьПокупатель);
	ТабДокумент.Вывести(ОбластьПустая1);
	ТабДокумент.Вывести(ОбластьДоговорПроект);  
	ТабДокумент.Вывести(ОбластьПустая1);
	ТабДокумент.Вывести(ОбластьАдресДоставки);
	ТабДокумент.Вывести(ОбластьПустая1);
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);
	нп = 1;
	Для каждого стр из Результат Цикл
		СК = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(стр);
		СК.Вставить("нп",нп);

		Если Строка(СК.ЕдиницаИзмерения) = "послуга" Тогда
			СК.Вставить("ЕдиницаИзмерения", 	"service / "+СК.ЕдиницаИзмерения);
		ИначеЕсли СокрЛП(СК.ЕдиницаИзмерения) = "упаковка" Тогда
			СК.Вставить("ЕдиницаИзмерения", 	"Pac / "+СК.ЕдиницаИзмерения);
		Иначе
			СК.Вставить("ЕдиницаИзмерения", 	"рс / "+СК.ЕдиницаИзмерения);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицы.Параметры,СтруктураШапки);
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаТаблицы.Параметры,СК);
		
		ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		нп = нп +1;
	КонецЦикла;
	
	
    ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Возврат ТабДокумент;
КонецФункции

Функция Транслит(Вход) 
	Коды = Новый Соответствие;
	Коды.Вставить("ё","yo");
	Коды.Вставить("Ё","Yo");
	Нач = КодСимвола("А");
	Англ = "A" "B" "V" "G" "D" "E" "Zh" "Z" "I" "Y" "K" "L" "M" "N" "O" "P" "R" "S" "T" "U" "F" "Kh" "Ts" "Ch" "Sh" "Shch" "" "Y" "" "E" "Yu" "Ya" "a" "b" "v" "g" "d" "e" "zh" "z" "i" "y" "k" "l" "m" "n" "o" "p" "r" "s" "t" "u" "f" "kh" "ts" "ch" "sh" "shch" "" "y" "" "e" "yu" "ya";
	Для К = Нач по КодСимвола("я") Цикл
		Коды.Вставить(Символ(К), СтрПолучитьСтроку(Англ, К - Нач + 1));
	КонецЦикла;
	Выход = "";
	Для К=1 по СтрДлина(Вход) Цикл
		Бкв = Сред(Вход,К,1);
		Зн = Коды.Получить(Бкв);
		Выход = Выход + ?(Зн = Неопределено, Бкв, Зн);
	КонецЦикла;
	Возврат Выход;
КонецФункции	

Процедура ПолучитьСтруктуруСоответствиеUKREN(Соответствие)
	КодЯзыкаПечать = "uk";
	КодЯзыкаПечатьEN = "en";
	Суффикс2 = "";
	Суффикс = "";
	Если Соответствие.СуммаВключаетНДС Тогда
		Суффикс  = Суффикс  + НСтр("ru=' с ';en=' with ';uk=' з '",КодЯзыкаПечать);
		Суффикс2  = Суффикс2  + НСтр("ru=' с ';en=' with ';uk=' з '",КодЯзыкаПечатьEN);
	Иначе	
		Суффикс  = Суффикс  + НСтр("ru=' без ';en=' without ';uk=' без '",КодЯзыкаПечать);
		Суффикс2  = Суффикс2  + НСтр("ru=' без ';en=' without ';uk=' без '",КодЯзыкаПечатьEN);
		
	КонецЕсли;
	Суффикс = Строка(Суффикс)  + Строка(НСтр("ru='НДС';en='VAT';uk='ПДВ'",КодЯзыкаПечать));
	Суффикс2 = Строка(Суффикс2)  + НСтр("ru='НДС';en='VAT';uk='ПДВ'",КодЯзыкаПечатьEN);
	Цена  = НСтр("ru='Цена';en='Price';uk='Ціна'",КодЯзыкаПечать) + Суффикс;
	ЦенаEN  = НСтр("ru='Цена';en='Price';uk='Ціна'",КодЯзыкаПечатьEN) + Суффикс2;
	
	ТекстЗаголовка = СформироватьЗаголовокДокумента(Соответствие.Ссылка, НСтр("ru='Расходная накладная';uk='Видаткова накладна'",КодЯзыкаПечать),КодЯзыкаПечать);
	ТекстЗаголовкаEN = СформироватьЗаголовокДокумента(Соответствие.Ссылка, НСтр("ru='Расходная накладная';en='Sales Invoice'",КодЯзыкаПечатьEN),КодЯзыкаПечатьEN);
	Соответствие.Вставить("ТекстЗаголовка",ТекстЗаголовкаEN + " / "+ТекстЗаголовка);
	Соответствие.Вставить("ТекстПоставщик","CONTRACTOR /
	|Виконавець");
	Соответствие.Вставить("ТекстПокупатель","Client /
	|Замовник");
	Соответствие.Вставить("ТекстДоговор","Сontract /
	|Договір");
	Соответствие.Вставить("ТекстПроект","Рroject /
	|Проект");
	Соответствие.Вставить("ТекстАдресаДоставки","Delivery address /
	|Адреса доставки");
	Соответствие.Вставить("ТекстТовар","Item / Товар");
	Соответствие.Вставить("ТекстКоличество","Q-ty / Кіл-сть");
	Соответствие.Вставить("ТекстЕдИзм","Unit / Од.");
	Соответствие.Вставить("ТекстЦена","Price with VAT / Ціна з ПДВ");
	Соответствие.Вставить("ТекстСумма"," Amount  with VAT / Сума з ПДВ");
	Соответствие.Вставить("ТекстВсего","Total / Всього:");
	Соответствие.Вставить("ТекстВсегоНДС","Including VAT: / У тому числі ПДВ:");
	Соответствие.Вставить("ТекстШапкаЦена",ЦенаEN+" / "+ Цена);
	Соответствие.Вставить("ТекстШапкаЕд","Unit / Од.");
	Соответствие.Вставить("ТекстСумма",НСтр("ru='Сумма';en=' Amount ';uk='Сума'",КодЯзыкаПечатьEN)+ Суффикс2+" / "+ НСтр("ru='Сумма';en=' Amount ';uk='Сума'",КодЯзыкаПечать)+ Суффикс);
	Соответствие.Вставить("ТекстКолво","Q-ty / Кіл-сть");
	Соответствие.Вставить("ТекстТовар","Item / Товар");
	Соответствие.Вставить("ТекстВсего","Total / Всього:");
	Соответствие.Вставить("ТекстПодписиОрганизация","CONTRACTOR / Виконавець:");
	Соответствие.Вставить("ТекстПодписиКонтрагент","Client / Замовник:");	
КонецПроцедуры
