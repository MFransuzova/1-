Процедура ВывестиПоОдномуДокументу(ТабличныйДокумент, ПервыйДокумент, Знач СведенияОДокументе)

	Макет = ПолучитьМакет("MXL_ПриложениеСРазделениемНаРТСИУслуги");	
	
	Если НЕ ПервыйДокумент Тогда
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ПервыйДокумент = Ложь;
	
	СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
	СведенияОДокументе.Организация, 
	СведенияОДокументе.ДатаДляПолученияСведений);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.ДатаДокумента = Формат(СведенияОДокументе.ДатаДокумента, "Л=en_US; ДФ=dd.MM.yyyy");
	ОбластьМакета.Параметры.ДатаДокументаEN = Формат(СведенияОДокументе.ДатаДокумента, "Л=en_US; ДФ='MMMM dd, yyyy'");
	
	Номер = НомерДоговора(СведенияОДокументе);
	
	ОбластьМакета.Параметры.Номер = Номер;
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
	НайтиПоРеквизиту("Имя", "Протокол_5dfa310f5d0a4a539e5be072d45b6e42");
	Протокол = УправлениеСвойствами.ЗначениеСвойства(СведенияОДокументе.Документ, Свойство);
	// + Corex Французова 04.07.2022   (доработка SD 1479)
	СтруктураЗаполнения = Новый Структура;
	СтруктураЗаполнения.Вставить("Протокол",Протокол);
	ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры,СтруктураЗаполнения);    
	//ОбластьМакета.Параметры.Протокол = Протокол;

	// - Corex Французова 04.07.2022   (доработка SD 1479)
		
	ТабличныйДокумент.Вывести(ОбластьМакета);
	// + Corex Французова 04.07.2022 (1479)
	Сообщение = Новый СообщениеПользователю;
	СтруктураШапки = Новый Структура;
	Разделяем = СведенияОДокументе.Документ.cx_ПоказатьКолонкуРазделДляВыводаВТаблицуВПечФорме; 
	Если Разделяем Тогда
		ТипыП = Новый Массив;
		Для  каждого Стр  Из СведенияОДокументе.Документ.Товары Цикл
			Если ЗначениеЗаполнено(стр.cx_РазделДляВыводаВТаблицуВПечФорме) Тогда
				Если ТипыП.Найти(стр.cx_РазделДляВыводаВТаблицуВПечФорме)=Неопределено Тогда
					ТипыП.Добавить(стр.cx_РазделДляВыводаВТаблицуВПечФорме)
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла; 
		СоответсвиеРазделов = Новый Соответствие;
		СоответсвиеРазделов.Вставить("1.1","Агентские действия по закупке (п.п. 1.1)");
		СоответсвиеРазделов.Вставить("1.2"," и оказать Услуги по транспортировке (п.п. 1.2)");
		Если ЗначениеЗаполнено(Протокол) Тогда
			СоответсвиеРазделов.Вставить("fee"," по протоколу "+Строка(Протокол));	
		КонецЕсли; 
		ТекстРазделяем = "";
		Для каждого эл Из ТипыП Цикл    
			ИзСписка = СоответсвиеРазделов.Получить(эл) ;
			Если НЕ  ИзСписка = Неопределено Тогда
				ТекстРазделяем = ТекстРазделяем+Строка(ИзСписка);
			КонецЕсли; 
		КонецЦикла;  
		Сообщение.Текст = Строка(ТекстРазделяем);
		Сообщение.Сообщить();
		Если Разделяем = Истина Тогда
			СтруктураШапки.Вставить("ШапкаКонтракта", "	За вознаграждение ИСПОЛНИТЕЛЬ обязуется совершить по поручению и за счёт ЗАКАЗЧИКА, но от своего собственного имени указанные ниже %1");// [Протокол].
			СтруктураШапки.ШапкаКонтракта = СтрЗаменить(СтруктураШапки.ШапкаКонтракта,"%1",ТекстРазделяем);	
		Иначе
			СтруктураШапки.Вставить("ШапкаКонтракта", "НЕТ");// [Протокол].
		КонецЕсли; 
		
		//ЗаполнитьЗначенияСвойств(ОбластьМакета.Параметры,СтруктураШапки);
		ОбластьМакета.Параметры.ШапкаКонтракта = СтруктураШапки.ШапкаКонтракта;    
	КонецЕсли;
	// - Corex Французова 04.07.2022 (1479)
	ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ИтогоП1_1 = 0;
	ИтогоFee = 0;
	ИтогоП1_2 = 0;
	
	ТЗТовары = СведенияОДокументе.Документ.Товары.Выгрузить();
	
	ТЗТовары.Колонки.Добавить("УжеВыведено", Новый ОписаниеТипов("Булево"));
	
	Разделы = cx_ДокСчетНаОплатуПокупателю.РазделыДляВыводаВТаблицуВПечФорме(СведенияОДокументе.Документ);
	
	Отбор = Новый Структура;
	Отбор.Вставить("cx_РазделДляВыводаВТаблицуВПечФорме", Разделы.п1_1);
	Отбор.Вставить("УжеВыведено", Ложь);
	
	Строки = ТЗТовары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() > 0 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыП1_1");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТЗ = ТЗТовары.Скопировать(Отбор, "Сумма");
		ИтогоП1_1 = ТЗ.Итог("Сумма");
		
		ВывестиСтрокиСНоменклатурой(Макет, ТабличныйДокумент, Строки, СведенияОДокументе);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыП1_1");
		ОбластьМакета.Параметры.Итого = СуммаСВалютойОтформатированная(ИтогоП1_1, СведенияОДокументе.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
	Отбор = Новый Структура;
	Отбор.Вставить("cx_РазделДляВыводаВТаблицуВПечФорме", Разделы.fee);
	Отбор.Вставить("УжеВыведено", Ложь);
	
	Строки = ТЗТовары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() > 0 Тогда
		ТЗ = ТЗТовары.Скопировать(Отбор);
		ИтогоFee = ТЗ.Итог("Сумма");
		
		Для каждого Строка Из Строки Цикл
			Строка.УжеВыведено = Истина;
		КонецЦикла; 
		
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыFee");
		ОбластьМакета.Параметры.Стоимость = СуммаСВалютойОтформатированная(ИтогоFee, СведенияОДокументе.Валюта);
		ОбластьМакета.Параметры.Сумма = СуммаСВалютойОтформатированная(ИтогоFee, СведенияОДокументе.Валюта);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
	Если Ложь
		ИЛИ НЕ ИтогоП1_1 = 0 
		ИЛИ НЕ ИтогоFee = 0 
		Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыП1_1ПлюсFee");
		ОбластьМакета.Параметры.Итого = СуммаСВалютойОтформатированная(ИтогоП1_1 + ИтогоFee, СведенияОДокументе.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
	Отбор = Новый Структура;
	Отбор.Вставить("cx_РазделДляВыводаВТаблицуВПечФорме", Разделы.п1_2);
	Отбор.Вставить("УжеВыведено", Ложь);
	
	Строки = ТЗТовары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() > 0 Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицыП1_2");
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		ТЗ = ТЗТовары.Скопировать(Отбор, "Сумма");
		ИтогоП1_2 = ТЗ.Итог("Сумма");
		
		ВывестиСтрокиСНоменклатурой(Макет, ТабличныйДокумент, Строки, СведенияОДокументе);
		
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыП1_2");
		ОбластьМакета.Параметры.Итого = СуммаСВалютойОтформатированная(ИтогоП1_2, СведенияОДокументе.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
	ВывестиПодвалТаблицы = Ложь
	ИЛИ НЕ ИтогоП1_1 = 0 
	ИЛИ НЕ ИтогоFee = 0 
	ИЛИ НЕ ИтогоП1_2 = 0;
	
	Если ВывестиПодвалТаблицы Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицы");
		ОбластьМакета.Параметры.Итого = 
		СуммаСВалютойОтформатированная(ИтогоП1_1 + ИтогоFee + ИтогоП1_2, СведенияОДокументе.Валюта);
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли; 
	
	Отбор = Новый Структура;
	Отбор.Вставить("УжеВыведено", Ложь);
	
	Строки = ТЗТовары.НайтиСтроки(Отбор);
	
	Если Строки.Количество() > 0 Тогда
		ВывестиСтрокиСНоменклатурой(Макет, ТабличныйДокумент, Строки, СведенияОДокументе);
		
		ТекстСообщения = "Есть строки без указанного п/п.";
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли; 
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалДопУсловий1");
	ОбластьМакета.Параметры.Номер = Номер;
	ОбластьМакета.Параметры.АдресОрганизации = СведенияОбОрганизации.ФактическийАдрес;
	ОбластьМакета.Параметры.ИтогоЛП = СуммаСВалютойОтформатированная(ИтогоП1_1, СведенияОДокументе.Валюта);
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалДопУсловий2");
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
	НайтиПоРеквизиту("Имя", "ДополнительныеУсловияДляПечатиВПриложении_ae348757f60b4b9488d92cbae1f9e03d");
	ДополнительныеУсловия = УправлениеСвойствами.ЗначениеСвойства(СведенияОДокументе.Документ, Свойство);
	
	ОбластьМакета.Параметры.ДополнительныеУсловия = ДополнительныеУсловия;
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
	НайтиПоРеквизиту("Имя", "ДополнительныеУсловияENGДляПечатиВПриложении_d537b002196a46c38085aca863870fd8");
	ДополнительныеУсловияENG = УправлениеСвойствами.ЗначениеСвойства(СведенияОДокументе.Документ, Свойство);
	
	ОбластьМакета.Параметры.ДополнительныеУсловияENG = ДополнительныеУсловияENG;
	
	Если Ложь
		ИЛИ ЗначениеЗаполнено(ДополнительныеУсловия)
		ИЛИ ЗначениеЗаполнено(ДополнительныеУсловияENG)
		Тогда
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
	НайтиПоРеквизиту("Имя", "МетодВыплатыВознаграждения_780074274a834d9a9bd8f370fe291e78");
	МетодВыплатыВознаграждения = УправлениеСвойствами.ЗначениеСвойства(СведенияОДокументе.Документ, Свойство);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалДопУсловий3");
	
	Если ЗначениеЗаполнено(МетодВыплатыВознаграждения) Тогда
		Стр28 = "";
		Стр28EN = "";
		
		ПолноеНаименование = МетодВыплатыВознаграждения.ПолноеНаименование;
		
		Разделитель = "#####";
		МассивСтрок = СтрРазделить(ПолноеНаименование, Разделитель, Ложь);
		
		Если МассивСтрок.Количество() > 0 Тогда
			Стр28 = СокрЛП(МассивСтрок[0]);
			Стр28 = СтрЗаменить(Стр28, "%Валюта%", СведенияОДокументе.Валюта);
		КонецЕсли; 
		
		Если МассивСтрок.Количество() > 1 Тогда
			Стр28EN = СокрЛП(МассивСтрок[1]);
			Стр28EN = СтрЗаменить(Стр28EN, "%Валюта%", СведенияОДокументе.Валюта);
		КонецЕсли; 
		
		ОбластьМакета.Параметры.Стр28 = Стр28;
		ОбластьМакета.Параметры.Стр28EN = Стр28EN;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.
	НайтиПоРеквизиту("Имя", "ДополнительнаяВыгода_46dfd3a53466424eaab3be1594ee6e9c");
	ДополнительнаяВыгода = УправлениеСвойствами.ЗначениеСвойства(СведенияОДокументе.Документ, Свойство);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалДопУсловий4");
	
	Если ЗначениеЗаполнено(ДополнительнаяВыгода) Тогда
		Стр30 = "";
		Стр30EN = "";
		
		ПолноеНаименование = ДополнительнаяВыгода.ПолноеНаименование;
		
		Разделитель = "#####";
		МассивСтрок = СтрРазделить(ПолноеНаименование, Разделитель, Ложь);
		
		Если МассивСтрок.Количество() > 0 Тогда
			Стр30 = СокрЛП(МассивСтрок[0]);
		КонецЕсли; 
		
		Если МассивСтрок.Количество() > 1 Тогда
			Стр30EN = СокрЛП(МассивСтрок[1]);
		КонецЕсли; 
		
		ОбластьМакета.Параметры.Стр30 = Стр30;
		ОбластьМакета.Параметры.Стр30EN = Стр30EN;
		
		ТабличныйДокумент.Вывести(ОбластьМакета);				
	КонецЕсли;
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалДопУсловий5");
	ТабличныйДокумент.Вывести(ОбластьМакета);
	
	ВывестиПодвалБезВисящегоКолонтитула(ТабличныйДокумент, Макет);

КонецПроцедуры
