	// + АИГ Французова 28.04.2022 (Доработка: себестоимость товаров :остатки в разрезе)
	СтруктураПеременных = Новый Структура;
	СтруктураПеременных.Вставить("ОстаткиПеременные", "ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка) КАК КК_ВидДеятельности, ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка) КАК КК_Проект,");
	СтруктураПеременных.Вставить("ОстаткиГруппировка", ",ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка)");
	СтруктураПеременных.Вставить("ОстаткиУсловиеМассивов", "");
	СтруктураПеременных.Вставить("ОстаткиИндексы", "");
	СтруктураПеременных.Вставить("ОстаткиПоСкладамПеременные", "ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка) КАК КК_ВидДеятельности, ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка) КАК КК_Проект,");
	СтруктураПеременных.Вставить("ОстаткиПоСкладамГруппировка", ",ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка)");
	СтруктураПеременных.Вставить("ВозвратыПеременные", "ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка) КАК КК_ВидДеятельности, ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка) КАК КК_Проект,");
	СтруктураПеременных.Вставить("ВозвратыГруппировка", ",ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка),ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяССылка)");
	СтруктураПеременных.Вставить("Соединение_ОстаткиПоСкладам_СуммовыеОстатки", "");
	СтруктураВидДеятельности = Новый Структура;
	Отбираем = Ложь;
	Если НЕ Отбираем Тогда
	Если НЕ ТаблицаСписания.Колонки.Найти("КК_ВидДеятельности") = Неопределено Тогда
		СтруктураВидДеятельности.Вставить("ОстаткиПеременные", " 
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка)
		| КОНЕЦ КАК КК_ВидДеятельности,");
		СтруктураВидДеятельности.Вставить("ОстаткиГруппировка", ",
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка)
		| КОНЕЦ ");
		
		//СтруктураВидДеятельности.Вставить("ОстаткиУсловиеМассивов", "
		//| ГДЕ ВЫБОР 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто4 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто3
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто2 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  Остатки.Субконто1 
		//|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка)
		//| КОНЕЦ  В(&МассивВидовДеятельности)
		////| И (Субконто2 В(&МассивВидовДеятельности) ИЛИ Субконто3 В(&МассивВидовДеятельности) ИЛИ Субконто4 В(&МассивВидовДеятельности))
		//|");
		//
		СтруктураВидДеятельности.Вставить("ОстаткиИндексы", ", КК_ВидДеятельности");
		СтруктураВидДеятельности.Вставить("ОстаткиПоСкладамПеременные", "
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто4) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто3) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто2) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто1) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка)
		| КОНЕЦ КАК КК_ВидДеятельности,");

		СтруктураВидДеятельности.Вставить("ОстаткиПоСкладамГруппировка", "
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто4) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто3) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто2) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто1) = ТИП(Справочник.КК_ВидыДеятельности) ТОГДА  ОстаткиПоСкладам.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.КК_ВидыДеятельности.ПустаяСсылка)
		| КОНЕЦ
		|");
		СтруктураВидДеятельности.Вставить("ВозвратыПеременные", "
		| ТаблицаВозвраты.КК_ВидДеятельности КАК КК_ВидДеятельности,");
		
		СтруктураВидДеятельности.Вставить("ВозвратыГруппировка", "
		| ТаблицаВозвраты.КК_ВидДеятельности, 
		|");
		СтруктураВидДеятельности.Вставить("Соединение_ОстаткиПоСкладам_СуммовыеОстатки", " И ОстаткиПоСкладам.КК_ВидДеятельности=СуммовыеОстатки.КК_ВидДеятельности");
	КонецЕсли;
	СтруктураПроекта = Новый Структура;
	Если НЕ ТаблицаСписания.Колонки.Найти("КК_Проект") = Неопределено Тогда
		СтруктураПроекта.Вставить("ОстаткиПеременные", " 
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		| КОНЕЦ КАК КК_Проект,");
		СтруктураПроекта.Вставить("ОстаткиГруппировка", ",
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		| КОНЕЦ ");
		
		//СтруктураПроекта.Вставить("ОстаткиУсловиеМассивов", "    
		//| ГДЕ
		//| ВЫБОР 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто4) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто4 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто3) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто3
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто2) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто2 
		//|   КОГДА ТИПЗНАЧЕНИЯ(Остатки.Субконто1) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  Остатки.Субконто1 
		//|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		//| КОНЕЦ  В(&МассивПроектов)
		////| И (Субконто2 В(&МассивПроектов) ИЛИ Субконто3 В(&МассивПроектов) ИЛИ Субконто4 В(&МассивПроектов))
		//|");
		//Если СтруктураВидДеятельности.Свойство("ОстаткиУсловиеМассивов") Тогда
		//	СтруктураПроекта.Вставить("ОстаткиУсловиеМассивов",СтрЗаменить(СтруктураПроекта.ОстаткиУсловиеМассивов,"ГДЕ","И"));		
		//КонецЕсли;
		
		СтруктураПроекта.Вставить("ОстаткиИндексы", ", КК_Проекты");
		СтруктураПроекта.Вставить("ОстаткиПоСкладамПеременные", "
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто4) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто3) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто2) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто1) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		| КОНЕЦ КАК КК_Проект,");

		СтруктураПроекта.Вставить("ОстаткиПоСкладамГруппировка", "
		| ВЫБОР 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто4) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто4 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто3) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто3
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто2) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто2 
		|   КОГДА ТИПЗНАЧЕНИЯ(ОстаткиПоСкладам.Субконто1) = ТИП(Справочник.НоменклатурныеГруппы) ТОГДА  ОстаткиПоСкладам.Субконто1 
		|   ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		| КОНЕЦ
		|");
		СтруктураПроекта.Вставить("ВозвратыПеременные", "
		| ТаблицаВозвраты.КК_Проект КАК КК_Проект,");
		
		СтруктураПроекта.Вставить("ВозвратыГруппировка", "
		| ТаблицаВозвраты.КК_Проект, 
		|");
		СтруктураПроекта.Вставить("Соединение_ОстаткиПоСкладам_СуммовыеОстатки", " И ОстаткиПоСкладам.КК_Проект=СуммовыеОстатки.КК_Проект");

	КонецЕсли;
	
	Для каждого СК из СтруктураВидДеятельности Цикл
		значениепеременной = СК.Значение;
		Если СтруктураПроекта.Свойство(СК.Ключ) Тогда
			значениепеременной = значениепеременной+" "+Строка(СтруктураПроекта[СК.Ключ]);
		КонецЕсли;
		СтруктураПеременных.Вставить(СК.Ключ,значениепеременной); 
	КонецЦикла;
	
	Для каждого стр из СтруктураПеременных Цикл
		Текст = СтрЗаменить(Текст, "%"+Строка(стр.Ключ), стр.Значение);
	КонецЦикла;

	// - АИГ Французова 28.04.2022 (Доработка: себестоимость товаров :остатки в разрезе)
	
	Если БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "Подразделение = &Подразделение");
	Иначе
		Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = Текст;                                         
	
	// + АИГ Французова 28.04.2022 (Доработка: себестоимость товаров :остатки в разрезе)
	РезультатВременный =  Запрос.Выполнить().Выгрузить();
	Если МассивВидовДеятельности.Количество()=0 Тогда 
		Результат = РезультатВременный;
	Иначе
		Результат = РезультатВременный.СкопироватьКолонки();
		
		Для каждого стр из РезультатВременный Цикл
			Если НЕ МассивВидовДеятельности.Найти(стр.КК_ВидДеятельности)=Неопределено
				И  НЕ МассивПроектов.Найти(стр.КК_Проект)=Неопределено Тогда
				нс = Результат.Добавить();
				ЗаполнитьЗначенияСвойств(нс,стр);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Иначе
		Если БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
			Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "Подразделение = &Подразделение");
		Иначе
			Текст = СтрЗаменить(Текст, "&УсловиеПоПодразделению", "ИСТИНА");
		КонецЕсли;
		
		Запрос.Текст = Текст;  
		Результат = Запрос.Выполнить().Выгрузить();

	КонецЕсли;	
	// - АИГ Французова 28.04.2022 (Доработка: себестоимость товаров :остатки в разрезе)
	
