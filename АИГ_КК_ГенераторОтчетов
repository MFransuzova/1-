// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
&НаСервере
Процедура АИГ_СформироватьОтчет_ТабДокумент(СтруктураПараметров)
	АИГ_ИмяФайла = Каталогвременныхфайлов()+СокрЛП(ИмяПользователя()) +".mxl";
	ДвоичныеДанные = Объект.Ссылка.ТабДокумент.Получить();
	Если НЕ ДвоичныеДанные = Неопределено Тогда
		Если  НЕ ТипЗнч(ДвоичныеДанные) = Тип("ДвоичныеДанные") Тогда
			Возврат;
		КонецЕсли;
		
		ДвоичныеДанные.Записать(АИГ_ИмяФайла);
		АИГ_ТабДок_Хранилище.Прочитать(АИГ_ИмяФайла);
		АИГ_ТабДок_Хранилище.ФиксацияСверху = Объект.ФиксацияСверху;
		АИГ_ТабДок_Хранилище.ФиксацияСлева  = Объект.ФиксацияСлева;
	КонецЕсли;
	
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 30.11.2021-03.12.2021 (Формирование Генератора отчетов)
&НаСервере
Процедура СформироватьМеждународнаяОтчетностьРасшифровка(СтруктураПараметров)  
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	ОбъектОтчет = РеквизитФормыВЗначение("Объект");
	Отчет = Отчеты.АИГ_ГенераторОтчетов_ОС.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
    ЗаполнитьЗначенияСвойств(Отчет.Параметры,СтруктураПараметров);
	
	Настройки = Отчет.НастройкиПоУмолчанию;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	ПараметрВыполненногоДействия = Новый Структура;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Отчет, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки,Истина);    
	
	ДанныеРасшифровкиАдрес = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, ЭтотОбъект.УникальныйИдентификатор);
	
	Результат = ЭтотОбъект.АИГ_ОтчетМеждународный;             // Табличный документ
	Результат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(Результат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	ЗначениеВРеквизитФормы(ОбъектОтчет,"Объект");
КонецПроцедуры
// - АИГ Французова 30.11.2021 (Формирование Генератора отчетов)

// + АИГ Французова 29.11.2021 (Формирование Генератора отчетов)

&НаКлиенте
Процедура АИГ_ПериодОчтетаПриИзменении(Элемент)
	СтруктураПечати = Новый Структура;
    СформироватьМеждународнаяОтчетностьРасшифровка(СтруктураПечати);
КонецПроцедуры
// - АИГ Французова 29.11.2021 (Формирование Генератора отчетов)

// + АИГ Французова 29.11.2021 (Формирование Генератора отчетов)
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Организация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЕдиницаИзмерения) Тогда
		//ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоКоду("001");
		ЕдиницаИзмерения = ПредопределенноеЗначение("Перечисление.ПорядкиОкругленияОтчетности.Окр1");
	КонецЕсли;      
	Если НЕ ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ФиксацияСверху) Тогда
		Объект.ФиксацияСверху = 4;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ФиксацияСлева) Тогда
		Объект.ФиксацияСлева = 1;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(АИГ_ПериодОчтета) Тогда
		АИГ_ПериодОчтета.ДатаНачала    = НачалоМесяца(ТекущаяДата());
		АИГ_ПериодОчтета.ДатаОкончания = КонецМесяца(ТекущаяДата());   
	КонецЕсли;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОбъектСсылка", Объект.Ссылка);
	СтруктураПараметров.Вставить("НачалоПериода",НачалоДня(АИГ_ПериодОчтета.ДатаНачала));
	СтруктураПараметров.Вставить("КонецПериода",КонецДня(АИГ_ПериодОчтета.ДатаОкончания));
	СтруктураПараметров.Вставить("НачалоПериодаДата",НачалоДня(АИГ_ПериодОчтета.ДатаНачала));
	СтруктураПараметров.Вставить("КонецПериодаДата",КонецДня(АИГ_ПериодОчтета.ДатаОкончания));
	СтруктураПараметров.Вставить("Организация",Организация);
	АИГ_СформироватьОтчет_ТабДокумент(СтруктураПараметров);
	//СформироватьМеждународнаяОтчетностьРасшифровка(СтруктураПараметров);
	
КонецПроцедуры
// - АИГ Французова 29.11.2021 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
&НаСервере
Процедура АИГ_ЗаписатьДанныеОтчета(СтруктураЗаписи)
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТабДок_ = ПолучитьИзВременногоХранилища(АИГ_АдресВХ);  
	ПотокФайла = Новый ПотокВПамяти();
	ТабДок_.Вывод = ИспользованиеВывода.Разрешить;
	ТабДок_.Записать(ПотокФайла);
	
	ЧтениеПотока = Новый ЧтениеДанных(ПотокФайла);
	РезультатЧтения = ЧтениеПотока.Прочитать();
	ДвоичныеДанныеФайла = ПотокФайла.ЗакрытьИПолучитьДвоичныеДанные();
	ОбОтчета = ТекОбъект.Ссылка.ПолучитьОбъект();
	ОбОтчета.ТабДокумент = Новый ХранилищеЗначения(ДвоичныеДанныеФайла, Новый СжатиеДанных());
	ОбОтчета.Записать();
	Если НЕ ЗначениеЗаполнено(АИГ_ПериодОчтета) Тогда
		АИГ_ПериодОчтета.ДатаНачала    = НачалоМесяца(ТекущаяДата());
		АИГ_ПериодОчтета.ДатаОкончания = КонецМесяца(ТекущаяДата());   
	КонецЕсли;
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ОбъектСсылка", Объект.Ссылка);
	СтруктураПараметров.Вставить("НачалоПериода",НачалоДня(АИГ_ПериодОчтета.ДатаНачала));
	СтруктураПараметров.Вставить("КонецПериода",КонецДня(АИГ_ПериодОчтета.ДатаОкончания));
	СтруктураПараметров.Вставить("НачалоПериодаДата",НачалоДня(АИГ_ПериодОчтета.ДатаНачала));
	СтруктураПараметров.Вставить("КонецПериодаДата",КонецДня(АИГ_ПериодОчтета.ДатаОкончания));
	СтруктураПараметров.Вставить("Организация",Организация);
	АИГ_СформироватьОтчет_ТабДокумент(СтруктураПараметров);
	
	ЗначениеВРеквизитФормы(ТекОбъект, "Объект");
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи) 
	ПоказатьВопрос(Новый ОписаниеОповещения("АИГ_ЗаписатьДанныеОтчетаКлиент", ЭтотОбъект), "Записать изменения Отчета?", РежимДиалогаВопрос.ДаНет);
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.АИГ_ТабДок_Хранилище.Редактирование = Истина;
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Если Тогда
	//	АИГ_ЗаписатьДанныеОтчета();
	//КонецЕсли;
	
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

&НаКлиенте
Процедура АИГ_ЗаписатьДанныеОтчетаКлиент(РезультатВопроса, ПараметрыЗаписи) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да ИЛИ РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		СтруктураЗаписи = Новый Структура;
		АИГ_АдресВХ = ПоместитьВоВременноеХранилище(АИГ_ТабДок_Хранилище);
		СтруктураЗаписи.Вставить("АдресВременногоХранилища",АИГ_АдресВХ);
		АИГ_ЗаписатьДанныеОтчета(СтруктураЗаписи);
	КонецЕсли;
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)
&НаСервере
Процедура АИГ_ТабДок_ХранилищеПриИзмененииСервер(Структура)
КонецПроцедуры
// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

// + АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

&НаКлиенте
Процедура АИГ_ТабДок_ХранилищеПриИзменении(Элемент)
	Структура = Новый Структура;
	АИГ_ТабДок_ХранилищеПриИзмененииСервер(Структура);
КонецПроцедуры

#Область ТекстЗапроса

// + АИГ Французова 28.01.2022 (Установка условий запроса ДтКт)
&НаСервере
Процедура СубконтоЗначениеДебетКредит(Структура)
	ТекстЗапроса = Структура.ТекстЗапроса;
	СубконтоДтКт = Структура.СубконтоДтКт;   
	УсловияСубконто = "";
	Если  ЗначениеЗаполнено(Структура.Значение) Тогда
		УсловияСубконто =" ГДЕ "+Структура.ВидСравненияД+" Рег."+СубконтоДтКт+"2.КК_SP = &SP ";
	КонецЕсли;
	
	к = 1;
	Пока к<= 4 Цикл
		Если ЗначениеЗаполнено(Структура["Субконто"+Строка(к)]) Тогда
			Если НЕ СтрДлина(УсловияСубконто) = 0 Тогда
				УсловияСубконто = УсловияСубконто + " И Рег."+СубконтоДтКт+Строка(к)+" В ИЕРАРХИИ (&Субконто"+Строка(к)+")";
			Иначе
				УсловияСубконто = УсловияСубконто +" ГДЕ Рег."+СубконтоДтКт+Строка(к)+" В ИЕРАРХИИ (&Субконто"+Строка(к)+")";
			КонецЕсли;
		КонецЕсли;
		к = к+1;
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%2",УсловияСубконто);
	
	Если СтрДлина(УсловияСубконто) = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%2","");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%6","");
	Структура.Вставить("ТекстЗапроса",ТекстЗапроса);
КонецПроцедуры
// - АИГ Французова 28.01.2022 (Установка условий запроса)

// + АИГ Французова 26.01.2022 (расчет значений формул)
&НаСервере
Процедура РасчетФормулы(Структура)
	Если НЕ Структура.Свойство("Функция") Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Структура.Функция) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Структура.Счет) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|Рег.СчетДт,
	|Рег.СчетКт,
	
	|РЕг.СубконтоДт1,
	|РЕг.СубконтоКт1,
	|Рег.СубконтоДт2.КК_SP КАК ДтКК_SP,
	|Рег.СубконтоКт2.КК_SP КАК КтКК_SP,
	|Рег.СубконтоДт2,
	|Рег.СубконтоКт2,
	|РЕг.СубконтоДт3,
	|РЕг.СубконтоКт3,
	|РЕг.СубконтоДт4,
	|РЕг.СубконтоКт4,
	
	|%5
	|СУММА(Рег.ВалютнаяСуммаОборотДт)
	|%7
	|ИЗ РегистрБухгалтерии.КК_Международный.ОборотыДтКт(НАЧАЛОПЕРИОДА(&ДатаНачала,ДЕНЬ),КОНЕЦПЕРИОДА(&ДатаОкончания,ДЕНЬ),Запись,%1,,%3 , ,) КАК Рег
	|%2 
	|СГРУППИРОВАТЬ ПО 
	|Рег.СчетДт,
	|Рег.СчетКт,
	|РЕг.СубконтоДт1,
	|РЕг.СубконтоКт1,
	|Рег.СубконтоДт2.КК_SP,
	|Рег.СубконтоКт2.КК_SP,
	|Рег.СубконтоДт2,
	|Рег.СубконтоКт2,
	|РЕг.СубконтоДт3,
	|РЕг.СубконтоКт3,
	|РЕг.СубконтоДт4,
	|РЕг.СубконтоКт4
	|%6
	|";
	Запрос.УстановитьПараметр("ДатаНачала",Структура.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",Структура.ДатаОкончания);
	Запрос.УстановитьПараметр("Счет",Структура.Счет);
	Запрос.УстановитьПараметр("SP",Структура.Значение);    
	Запрос.УстановитьПараметр("Коэффициент",Структура.Коэффициент);

	ВидСравненияД = "";
	Если Структура.ВидСравнения = ПредопределенноеЗначение("Перечисление.КК_ВидыСравнения.НеРавно") Тогда
		ВидСравненияД =" НЕ ";
	КонецЕсли;  
	
	СтруктураУсловий = Новый Структура;
	СтруктураУсловий.Вставить("Условие",Ложь);
	СтруктураУсловий.Вставить("ТекстЗапроса",Запрос.Текст);
	СтруктураУсловий.Вставить("ВидСравненияД",ВидСравненияД);   
	СтруктураУсловий.Вставить("Значение",Структура.Значение);

	к = 1; 
	СтруктураМассивов = Новый Структура;
	Пока к<= 4 Цикл
		СтруктураМассивов.Вставить("МассивСубконто"+Строка(к),Новый Массив);
		Если ЗначениеЗаполнено(Структура["Субконто"+Строка(к)]) Тогда
			СтруктураМассивов.Вставить("МассивСубконто"+Строка(к), Структура["Субконто"+Строка(к)].СписокДляОтбора.ВыгрузитьКолонку("Субконто"));
		КонецЕсли;
		Запрос.УстановитьПараметр("Субконто"+Строка(к),СтруктураМассивов["МассивСубконто"+Строка(к)]);
		СтруктураУсловий.Вставить("Субконто"+Строка(к),Структура["Субконто"+Строка(к)]);
		к = к+1;
	КонецЦикла;

	Если Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.ДО") Тогда
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%1"," СчетДт = &Счет");    
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%3","");
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%5","СУММА(РЕг.СуммаОборот) КАК ДО, СУММА(0) КАК КО, СУММА(РЕг.СуммаОборот) КАК СуммаОборот,");
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоДт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%7","");
		
	ИначеЕсли Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.ДОкол") Тогда
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%1"," СчетДт = &Счет");    
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%3","");
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%5","СУММА(РЕг.СуммаОборот) КАК ДО, СУММА(0) КАК КО, СУММА(Рег.КоличествоОборотДт) КАК ДОкол, СУММА(РЕг.КоличествоОборотДт) КАК СуммаОборот,");
		
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоДт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%7","");
	ИначеЕсли Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.КО") Тогда
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%1","");    
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%3"," СчетКт = &Счет ");
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%5","СУММА(0) КАК ДО, СУММА(РЕг.СуммаОборот) КАК КО, СУММА(РЕг.СуммаОборот) КАК СуммаОборот,");
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоКт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%7","");
		
	ИначеЕсли Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.КОкол") Тогда
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%1","");    
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%3","СчетКт = &Счет");
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%5","СУММА(РЕг.СуммаОборот) КАК ДО, СУММА(0) КАК КО, СУММА(Рег.КоличествоОборотДт) КАК ДОкол, СУММА(Рег.КоличествоОборотКт) КАК КОкол, СУММА(РЕг.КоличествоОборотКт) КАК СуммаОборот,");
		
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоКт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		
		СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%7","");	
	ИначеЕсли Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.ДОминусКО") 
		ИЛИ Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.ДОминусКОкол") Тогда  // АИГ Французова 28.01.2022
		ТекстДт = СтруктураУсловий.ТекстЗапроса;
		ТекстОбъединить = " ОБЪЕДИНИТЬ ВСЕ " ;
		ТекстКт = СтруктураУсловий.ТекстЗапроса;
		ТекстДанных = "";
		//_______________________________  Кредит _____________________________________________
		ТекстКт = СтрЗаменить(ТекстКт,"%1","");
		ТекстКт = СтрЗаменить(ТекстКт,"%3"," СчетКт В ИЕРАРХИИ (&Счет)");  
		
		ТекстКт = СтрЗаменить(ТекстКт,"%5","СУММА(0) КАК ДО, СУММА(РЕг.СуммаОборот) КАК КО, СУММА(0) КАК ДОкол, СУММА(Рег.КоличествоОборотКт) КАК КОкол, СУММА(РЕг.СуммаОборот) КАК СуммаОборот,");
		
		СтруктураУсловий.Вставить("ТекстЗапроса",ТекстКт);
		
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоКт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		
		ТекстКт = СтруктураУсловий.ТекстЗапроса;
		ТекстКт = СтрЗаменить(ТекстКт,"%7","");
		
		
		//_______________________________ Дебет _______________________________________________
		ТекстДт = СтрЗаменить(ТекстДт,"%1"," СчетДт В ИЕРАРХИИ (&Счет)");
		ТекстДт = СтрЗаменить(ТекстДт,"%3","");  
		ТекстДт = СтрЗаменить(ТекстДт,"%5","СУММА(РЕг.СуммаОборот) КАК ДО, СУММА(0) КАК КО,  СУММА(Рег.КоличествоОборотДт) КАК ДОкол, СУММА(0) КАК КОкол,СУММА(РЕг.СуммаОборот) КАК СуммаОборот,");
		
		СтруктураУсловий.Вставить("ТекстЗапроса",ТекстДт);
		СтруктураУсловий.Вставить("СубконтоДтКт","СубконтоДт");
		СубконтоЗначениеДебетКредит(СтруктураУсловий);
		
		ТекстДт = СтруктураУсловий.ТекстЗапроса;
		ТекстДт = СтрЗаменить(ТекстДт,"%7"," ПОМЕСТИТЬ ДанныеДОминусКО");
		//_______________________________ ОбщийЗапрос ___________________________________________
		ТекстДанных = ТекстДт + ТекстОбъединить + ТекстКт + ";
		|ВЫБРАТЬ
		|Рег.СчетДт,
		|Рег.СчетКт,
		|РЕг.СубконтоДт1,
		|РЕг.СубконтоКт1,
		|Рег.ДтКК_SP,
		|Рег.КтКК_SP,
		|Рег.СубконтоДт2,
		|Рег.СубконтоКт2,
		|РЕг.СубконтоДт3,
		|РЕг.СубконтоКт3,
		|РЕг.СубконтоДт4,
		|РЕг.СубконтоКт4,
		|СУММА(Рег.ДО),
		|СУММА(Рег.КО), 
		|СУММА(Рег.ДОкол),
		|СУММА(Рег.КОкол), 
		|%9 КАК СуммаОборот 
		|ИЗ ДанныеДОминусКО КАК Рег
		|СГРУППИРОВАТЬ ПО 
		|Рег.СчетДт,
		|Рег.СчетКт,
		|РЕг.СубконтоДт1,
		|РЕг.СубконтоКт1,
		|Рег.ДтКК_SP,
		|Рег.КтКК_SP,
		|Рег.СубконтоДт2,
		|Рег.СубконтоКт2,
		|РЕг.СубконтоДт3,
		|РЕг.СубконтоКт3,
		|РЕг.СубконтоДт4,
		|РЕг.СубконтоКт4
		|";
		СтруктураУсловий.ТекстЗапроса =  ТекстДанных;
		Если Структура.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.ДОминусКОкол") Тогда
			СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%9","(СУММА(Рег.ДОкол)-СУММА(Рег.КОкол))*&Коэффициент");
		Иначе
			СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%9","(СУММА(Рег.ДО)-СУММА(Рег.КО))*&Коэффициент ");
		КонецЕсли;
	Иначе
		к = 1;
		Пока к<=10 Цикл
			СтруктураУсловий.ТекстЗапроса = СтрЗаменить(СтруктураУсловий.ТекстЗапроса,"%"+Строка(к),"");
			к = к+1;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = СтруктураУсловий.ТекстЗапроса;
	Результат = Запрос.Выполнить().Выгрузить();
	
	СуммаОборота = 0;
	Для каждого стр из Результат Цикл
		СуммаОборота = СуммаОборота+стр.СуммаОборот;
	КонецЦикла;
	Структура.ТекстОбласти = СуммаОборота;
	
КонецПроцедуры
#КонецОбласти

// - АИГ Французова 26.01.2022 (расчет значений формул)
// + АИГ Французова 26.01.2022 (расчет значений формул)

&НаСервере
Процедура ПолучитьЗначенияФормул(СтруктураДанных)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТЗ = ОбработкаОбъект.Формулы.Выгрузить();
	Отбор = Новый Структура;
	Отбор.Вставить("Ячейка",СтруктураДанных.Ячейка);
	Найден = ТЗ.НайтиСтроки(Отбор);
	СуммаОборота = 0;
	Для каждого стр из Найден Цикл
		СК = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(стр);
		Для каждого ск_ из СтруктураДанных Цикл
			СК.Вставить(ск_.Ключ,ск_.Значение);
		КонецЦикла;
		Если СК.Функция = ПредопределенноеЗначение("Справочник.КК_ФункцииГенератораОтчетов.Формула") Тогда
			МассивЯчеекПлюс = СтрРазделить(СК.Формула,"+");	
			МассивЯчеекМинус = СтрРазделить(СК.Формула,"-");
			Если МассивЯчеекМинус.Количество()=1 Тогда
				МассивЯчеекМинус.Очистить();
			КонецЕсли;
			Если МассивЯчеекПлюс.Количество()=1 Тогда
				МассивЯчеекПлюс.Очистить();
			КонецЕсли;
			
            СтруктураДанных.Вставить("МассивЯчеекПлюс",МассивЯчеекПлюс);
			СтруктураДанных.Вставить("МассивЯчеекМинус",МассивЯчеекМинус);
		Иначе
			РасчетФормулы(СК); 
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтруктураДанных,СК);
		СуммаОборота = СуммаОборота+СтруктураДанных.ТекстОбласти;
	КонецЦикла;
	Если НЕ Найден.Количество()=0 Тогда
		//СуммаОборота = СуммаОборота+СтруктураДанных.ТекстОбласти;

		СтруктураДанных.ТекстОбласти = СуммаОборота;
	КонецЕсли;
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
КонецПроцедуры
// - АИГ Французова 26.01.2022 (расчет значений формул)


// + АИГ Французова 26.01.2022 (вывод значений формул)
&НаСервере
Процедура СформироватьШаблонНаСервере()
	к = 1;
	МассивФормул = Новый Массив;
	МассивФормул.Добавить("ДО");
	МассивФормул.Добавить("КО");
	Пока к<=АИГ_ТабДок_Хранилище.ВысотаТаблицы Цикл
		ш = 1;      
		Пока ш <= АИГ_ТабДок_Хранилище.ШиринаТаблицы Цикл
			ИмяОбласти = "R"+Строка(к)+"C"+Строка(ш);
			Область = АИГ_ТабДок_Хранилище.Область(ИмяОбласти);
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("ИмяОбласти",ИмяОбласти);
			СтруктураДанных.Вставить("Область",Область);
			СтруктураДанных.Вставить("ДатаНачала",АИГ_ПериодОчтета_Отчет.ДатаНачала);
			СтруктураДанных.Вставить("ДатаОкончания",АИГ_ПериодОчтета_Отчет.ДатаОкончания);
			
			СтруктураДанных.Вставить("Ячейка",ИмяОбласти);
			СтруктураДанных.Вставить("ТекстОбласти",Область.Текст);
			ПолучитьЗначенияФормул(СтруктураДанных);
			Если СтруктураДанных.Свойство("МассивЯчеекМинус") ИЛИ СтруктураДанных.Свойство("МассивЯчеекПлюс")  Тогда
				ОбщаяСумма = 0;
				Если НЕ СтруктураДанных.МассивЯчеекПлюс.Количество()=0 Тогда
					Для каждого эл из СтруктураДанных.МассивЯчеекПлюс Цикл
						СуммаОбласти = АИГ_ТабДок_Хранилище.Область(эл);
						ОбщаяСумма = ОбщаяСумма + Число(СуммаОбласти.Текст);
					КонецЦикла;
				КонецЕсли;
				Если НЕ СтруктураДанных.МассивЯчеекМинус.Количество()=0 Тогда
					СуммаОбласти = АИГ_ТабДок_Хранилище.Область(СтруктураДанных.МассивЯчеекМинус[0]);
					ОбщаяСумма =  Число(СуммаОбласти.Текст);
					Для каждого эл из СтруктураДанных.МассивЯчеекМинус Цикл
						Если эл = СтруктураДанных.МассивЯчеекМинус[0] Тогда
							Продолжить;
						КонецЕсли;
						
						СуммаОбласти = АИГ_ТабДок_Хранилище.Область(эл);
						ОбщаяСумма = ОбщаяСумма - Число(СуммаОбласти.Текст);
					КонецЦикла;
				КонецЕсли;

				Область.Текст =  ОбщаяСумма;
			Иначе
				Область.Текст = СтруктураДанных.ТекстОбласти;
			КонецЕсли;
			
			ш = ш+1;
		КонецЦикла;
		к = к+1;
	КонецЦикла;
	
КонецПроцедуры
// - АИГ Французова 26.01.2022 (вывод значений формул)

&НаКлиенте
Процедура СформироватьШаблон(Команда)
	СформироватьШаблонНаСервере();
КонецПроцедуры

// - АИГ Французова 06.01.2022 (Формирование Генератора отчетов)

