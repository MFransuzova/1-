
// + ДБ Французова 17.02.2023  ( 1144 документооборот )
 &НаСервере
Процедура ПолучитьДанныеДокумента(Структура)
	
	Если НЕ Структура.Свойство("ВнешнийОбъект") Тогда
		Возврат;
	КонецЕсли;
	
	ВнешнийОбъект = Структура.ВнешнийОбъект;
	ДоступенФункционалВизы = Истина;
    ДоступенФункционалРезолюции	= Истина;  
	
	Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
	
	ВнешнийОбъектXDTO = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "ExternalObject");
	ВнешнийОбъектXDTO.ID = Строка(ВнешнийОбъект.УникальныйИдентификатор());
	ВнешнийОбъектXDTO.type = ВнешнийОбъект.Метаданные().ПолноеИмя();
	ВнешнийОбъектXDTO.name = Строка(ВнешнийОбъект);
	
	Запрос = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
	СписокВнешнихОбъектов = Запрос.externalObjects; // СписокXDTO
	ПолучаемыеПоля = Запрос.columnSet; // СписокXDTO
	
	СписокВнешнихОбъектов.Добавить(ВнешнийОбъектXDTO);
	
	ПолучаемыеПоля.Добавить("name");
	Если ДоступенФункционалВизы Тогда
		ПолучаемыеПоля.Добавить("visas");
	КонецЕсли;
	Если ДоступенФункционалРезолюции Тогда
		ПолучаемыеПоля.Добавить("resolutions");
	КонецЕсли;
	
	Результат = Прокси.execute(Запрос);
	Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, Результат, "DMError") Тогда 
		ВызватьИсключение Результат.description;
	КонецЕсли;
		
	ОбъектXDTO = Неопределено;
	Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, Результат, "DMGetObjectListResponse") Тогда
		Если Результат.items.Количество() > 0 Тогда
			ОбъектXDTO = Результат.items[0].object;
		КонецЕсли;
	Иначе // совместимость со старыми версиями сервиса
		Если Результат.documents.Количество() > 0 Тогда
			ОбъектXDTO = Результат.documents[0];
		КонецЕсли;
	КонецЕсли;
	
		
	Если НЕ ОбъектXDTO = Неопределено Тогда
		// Заполним основные реквизиты.
		ДокументID = ОбъектXDTO.objectID.ID;
		ДокументТип = ОбъектXDTO.objectID.type;
		Документ = ОбъектXDTO.name;     // Здесь получаем нужный нам документ 
		Структура.Вставить("Документ",Документ);
	КонецЕсли;
	
КонецПроцедуры
// - ДБ Французова 17.02.2023   ( 1144 документооборот )
// + ДБ Французова 17.02.2023  ( 1144 документооборот )  
&НаСервере
Процедура ОбработкаДанныхТаблица(СтруктураОтбора)      
	Сообщение = Новый СообщениеПОльзователю;
	Если СтруктураОтбора.МассивССылокОбъектов.Количество()=0 Тогда
		Сообщение.Текст = "Не выбраны объекты анализа!";
		Сообщение.Сообщить();   
		Возврат;
	КонецЕсли;    
	
	ТабДокумент = СтруктураОтбора.ТД; 
	

	Запрос = Новый Запрос;
	Запрос.Текст = "
  |  ВЫБРАТЬ РАЗРЕШЕННЫЕ 
  |  Рег.Объект   
  |  ПОМЕСТИТЬ ОбъектыПереданные
  |  ИЗ РегистрСведений.ОбъектыИнтегрированныеС1СДокументооборотом КАК  Рег
  |  %ВидыОбъектов %ПериодОбъектов 
  |  ;    
  |  %ДокументыНеОтправленные
  /////////////////////////////////////////
  | ВЫБРАТЬ
  | ОбъектыПереданные.Объект КАК Объект    
  | ПОМЕСТИТЬ ОбъектыДанных
  | ИЗ ОбъектыПереданные КАК ОбъектыПереданные
  |ОБЪЕДИНИТЬ ВСЕ 
  | ВЫБРАТЬ
  | ОбъектНеДО.Объект КАК Объект
  | ИЗ ОбъектНеДО КАК ОбъектНеДО
  |;

| ВЫБРАТЬ 
|  ПоследнееСостояние.Владелец,
|  MAX(ПоследнееСостояние.ДатаПоследнегоИзменения) КАК ДатаПоследнегоИзменения 
|  ПОМЕСТИТЬ ПоследнееСостояния 
|  ИЗ РегистрСведений.СостоянияОригиналовПервичныхДокументов КАК ПоследнееСостояние   
|  ГДЕ ПоследнееСостояние.Владелец В (ВЫБРАТЬ ОбъектыДанных.Объект ИЗ ОбъектыДанных КАК ОбъектыДанных) 
| СГРУППИРОВАТЬ ПО
| ПоследнееСостояние.Владелец 
|; 
|  ВЫБРАТЬ  РАЗРЕШЕННЫЕ 
|  СостоянияОригиналов.Владелец,
|  СостоянияОригиналов.Состояние,
|  СостоянияОригиналов.ДатаПоследнегоИзменения,
|  СостоянияОригиналов.АвторИзменения 
|  ПОМЕСТИТЬ ТекущиеСостояния
|  ИЗ РегистрСведений.СостоянияОригиналовПервичныхДокументов КАК СостоянияОригиналов
|  ГДЕ (СостоянияОригиналов.Владелец,СостоянияОригиналов.ДатаПоследнегоИзменения) 
|  В (ВЫБРАТЬ ПоследнееСостояния.Владелец,ПоследнееСостояния.ДатаПоследнегоИзменения ИЗ ПоследнееСостояния КАК ПоследнееСостояния)
|  ;
|  ВЫБРАТЬ       
|  Данные.Объект,  
|  Данные.Объект.Дата КАК ДатаОбъекта,
|  ЕСТЬNULL(ТекущиеСостояния.Состояние,NULL) КАК Состояние, 
|  ЕСТЬNULL(ТекущиеСостояния.ДатаПоследнегоИзменения,NULL) КАК ДатаПоследнегоИзменения,
|  ЕСТЬNULL(ТекущиеСостояния.АвторИзменения,NULL) КАК АвторИзменения
|  ИЗ ОбъектыДанных КАК Данные
|  ЛЕВОЕ СОЕДИНЕНИЕ ТекущиеСостояния КАК ТекущиеСостояния ПО ТекущиеСостояния.Владелец = Данные.Объект	
	
  |";        
	Запрос.УстановитьПараметр("НачалоПериода",СтруктураОтбора.НачалоПериода); 
	Запрос.УстановитьПараметр("КонецПериода",СтруктураОтбора.КонецПериода);  
	
	///// Отправленные ДО
	ВидыОбъектов =" ГДЕ ("; 
	последний = 1;
	Для каждого эл из СтруктураОтбора.МассивССылокОбъектов Цикл
		ВидыОбъектов = ВидыОбъектов +" Рег.Объект ССЫЛКА "+эл; 
		Если НЕ последний = СтруктураОтбора.МассивССылокОбъектов.Количество() Тогда 
			ВидыОбъектов = ВидыОбъектов +" ИЛИ ";
			последний = последний+1;
		КонецЕсли;
	КонецЦикла;         
    ВидыОбъектов =ВидыОбъектов+" ) ";
	///// Не оптавленные ДО      
	ДокументыНеОтправленные = "";   
	НомерОбъекта = 1;
	Для каждого эл из СтруктураОтбора.МассивССылокОбъектов Цикл   
		Если НомерОбъекта >1 Тогда 
			ДокументыНеОтправленные = ДокументыНеОтправленные + " ОБЪЕДИНИТЬ ВСЕ ";
		КонецЕсли;
		
		ДокументыНеОтправленные = ДокументыНеОтправленные + "
		|ВЫБРАТЬ
		|Док.Ссылка КАК Объект 
		| %ТаблицаПомещения
		| ИЗ "+ эл +" КАК Док
		| ГДЕ Док.Ссылка НЕ В (ВЫБРАТЬ ОбъектыПереданные.Объект ИЗ ОбъектыПереданные КАК ОбъектыПереданные)
		| И Док.Проведен
		| %ПериодНЕДООбъектов
		|";     
		Если НомерОбъекта = 1 Тогда  
			ДокументыНеОтправленные = СтрЗаменить(ДокументыНеОтправленные,"%ТаблицаПомещения"," ПОМЕСТИТЬ ОбъектНеДО");
		Иначе
			ДокументыНеОтправленные = СтрЗаменить(ДокументыНеОтправленные,"%ТаблицаПомещения","");
		КонецЕсли;
		
		НомерОбъекта = НомерОбъекта+1;
	КонецЦикла;    
	Если ЗначениеЗаполнено(ДокументыНеОтправленные) Тогда
		ДокументыНеОтправленные = ДокументыНеОтправленные+" ; ";
	КонецЕсли;
	
	///////////////// 
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ВидыОбъектов",ВидыОбъектов);	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ДокументыНеОтправленные",ДокументыНеОтправленные);	
	
	Если ЗначениеЗаполнено(СтруктураОтбора.НачалоПериода) Тогда   
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПериодОбъектов"," И Рег.Объект.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода) И КОНЕЦПЕРИОДА(&КонецПериода)");	
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПериодНЕДООбъектов"," И Док.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоПериода) И КОНЕЦПЕРИОДА(&КонецПериода)");	
		
	Иначе   
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПериодОбъектов","");	   
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПериодНЕДООбъектов","");	
	КонецЕсли;
	/////////////////////	
	
   Результат = Запрос.Выполнить().Выгрузить();   
	Если Результат.Количество()=0 Тогда
		Сообщение.Текст = " за данный период нет объектов ";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли;
	
	Результат.Сортировать("ДатаОбъекта +");
	МассивОбъектов = Результат.ВыгрузитьКолонку("Объект");   
	МассивДанныхОтчета = Новый Массив;    
	нп = 1;
	Для каждого эл из МассивОбъектов Цикл 
		Если эл = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураДанных = Новый Структура;
		СтруктураДанных.Вставить("ВнешнийОбъект",эл); 
		СтруктураДанных.Вставить("Документ",Неопределено);  		
		СтруктураДанных.Вставить("нп",нп);

		Для каждого кол из Результат.Колонки Цикл 
			СтруктураДанных.Вставить(кол.Имя,Неопределено);
		КонецЦикла;
		
		ПолучитьДанныеДокумента(СтруктураДанных);  
		СтруктураПоиска = Новый Структура;  
	    СтруктураПоиска.Вставить("Объект",эл);	
        ОтборРезультата = Результат.НайтиСтроки(СтруктураПоиска);
		Если НЕ ОтборРезультата = Неопределено Тогда  
			СК = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ОтборРезультата[0]);
			ЗаполнитьЗначенияСвойств(СтруктураДанных,СК);
		КонецЕсли;
		
		//Если НЕ СтруктураДанных.Документ = Неопределено Тогда 
		    нп = нп+1;
			МассивДанныхОтчета.Добавить(СтруктураДанных);      
		//КонецЕсли;
	КонецЦикла;    
	
	//ТабДокумент = Новый ТабличныйДокумент;  
	Обработка =  РеквизитФормыВЗначение("Объект");
	Макет = Обработка.ПолучитьМакет("Макет"); 
	ОбластьЗаголовок            = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапка                = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаТаблицы         = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока               = Макет.ПолучитьОбласть("Строка");
	
	ЗаполнитьЗначенияСвойств(ОбластьЗаголовок.Параметры,СтруктураОтбора);
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,СтруктураОтбора);
	
	ТабДокумент.Вывести(ОбластьЗаголовок);       
	ТабДокумент.Вывести(ОбластьШапка);       
	ТабДокумент.Вывести(ОбластьШапкаТаблицы);  
	
	Для каждого эл из МассивДанныхОтчета Цикл  
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,эл);
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
   // Возврат ТабДокумент;	
КонецПроцедуры  

&НаКлиенте
Процедура Команда1(Команда)  
	ТД = Новый ТабличныйДокумент;  
	МассивССылокОбъектов = Новый Массив;
	МассивССылокОбъектов.Добавить("Документ.ПриобретениеУслугПрочихАктивов"); 
	МассивССылокОбъектов.Добавить("Документ.ПриобретениеТоваровУслуг");
	
	
	СтруктураОтбора = Новый Структура;
    СтруктураОтбора.Вставить("ТД",ТД);   
	СтруктураОтбора.Вставить("ПериодОтчета",ПериодОтчета);
	СтруктураОтбора.Вставить("НачалоПериода",ПериодОтчета.ДатаНачала);     
	СтруктураОтбора.Вставить("КонецПериода",ПериодОтчета.ДатаОкончания);
	СтруктураОтбора.Вставить("МассивССылокОбъектов",МассивССылокОбъектов);

	ОбработкаДанныхТаблица(СтруктураОтбора);
	ИдентификаторПечатнойФормы = "ПечатьДанныеДО";
	КоллекцияПечатныхФорм =  УправлениеПечатьюКлиент.НоваяКоллекцияПечатныхФорм(ИдентификаторПечатнойФормы);
	ОбъектыПечати = Новый Массив;
	ОбъектыПечати.Добавить(СтруктураОтбора.ТД);
	КоллекцияПечатныхФорм[0].ТабличныйДокумент = ОбъектыПечати[0];	
	УправлениеПечатьюКлиент.ПечатьДокументов(КоллекцияПечатныхФорм);
КонецПроцедуры

// - ДБ Французова 17.02.2023   ( 1144 документооборот )


