  
  // + ДБ Французова 21.02.2023  ( 1144 документооборот ) 
   &НаСервере
 Функция ПолучитьДанныеДокумента(эл)  Экспорт
	 
	 Соответствие = Новый Соответствие;
	 //Для каждого эл из МассивОбъектов Цикл
		 ВнешнийОбъект = эл;
		 ДоступенФункционалВизы = Истина;
		 ДоступенФункционалРезолюции	= Истина;  
		 
		 Прокси = ИнтеграцияС1СДокументооборотБазоваяФункциональностьПовтИсп.ПолучитьПрокси();
		 
		 ВнешнийОбъектXDTO = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "ExternalObject");
		 ВнешнийОбъектXDTO.ID = Строка(ВнешнийОбъект.УникальныйИдентификатор());
		 ВнешнийОбъектXDTO.type = ВнешнийОбъект.Метаданные().ПолноеИмя();
		 ВнешнийОбъектXDTO.name = Строка(ВнешнийОбъект);
		 
		 Запрос = ИнтеграцияС1СДокументооборотБазоваяФункциональность.СоздатьОбъект(Прокси, "DMGetDocumentListRequest");
		 СписокВнешнихОбъектов = Запрос.externalObjects; // СписокXDTO
		 ПолучаемыеПоля = Запрос.columnSet; // СписокXDTO
		 
		 СписокВнешнихОбъектов.Добавить(ВнешнийОбъектXDTO);
		 
		 ПолучаемыеПоля.Добавить("name");
		 Если ДоступенФункционалВизы Тогда
			 ПолучаемыеПоля.Добавить("visas");
		 КонецЕсли;
		 Если ДоступенФункционалРезолюции Тогда
			 ПолучаемыеПоля.Добавить("resolutions");
		 КонецЕсли;
		 
		 Результат = Прокси.execute(Запрос);
		 Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, Результат, "DMError") Тогда 
			 ВызватьИсключение Результат.description;
		 КонецЕсли;
		 
		 ОбъектXDTO = Неопределено;
		 Если ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПроверитьТип(Прокси, Результат, "DMGetObjectListResponse") Тогда
			 Если Результат.items.Количество() > 0 Тогда
				 ОбъектXDTO = Результат.items[0].object;
			 КонецЕсли;
		 Иначе // совместимость со старыми версиями сервиса
			 Если Результат.documents.Количество() > 0 Тогда
				 ОбъектXDTO = Результат.documents[0];
			 КонецЕсли;
		 КонецЕсли;
		 
		 
		 Если НЕ ОбъектXDTO = Неопределено Тогда
			 // Заполним основные реквизиты.
			 ДокументID = ОбъектXDTO.objectID.ID;
			 ДокументТип = ОбъектXDTO.objectID.type;
			 Документ = ОбъектXDTO.name;     // Здесь получаем нужный нам документ 
		 КонецЕсли;  
		 //Соответствие.Вставить(эл,Документ);
	 //КонецЦикла;
	 //Возврат Соответствие;  
	 Возврат Документ;
 КонецФункции
 
 // - ДБ Французова 21.02.2023   ( 1144 документооборот )
 Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

 СтандартнаяОбработка = Ложь;
 Настройки = КомпоновщикНастроек.ПолучитьНастройки();
 ПараметрыДанных = Настройки.ПараметрыДанных;

 КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
 МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки, , , Ложь);
 ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
 ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки, Истина);
 ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;   
 ПроцессорВывода.УстановитьДокумент(ДокументРезультат);   
 ПроцессорВывода.НачатьВывод();  
 
 Пока Истина Цикл   
	 ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	 Если ЭлементРезультата = Неопределено Тогда
		 Прервать;
	 КонецЕсли;
	 ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);   
	 Если НЕ ЭлементРезультата.ЗначенияПараметров.Количество()=0 Тогда   
		 IDДокументаERP = ЭлементРезультата.ЗначенияПараметров.П19.Значение;
		 GUID_ДокументERP = Новый УникальныйИдентификатор(IDДокументаERP);   
		 ВидДока = Метаданные.Документы[СтрЗаменить(ОбщегоНазначения.СтроковоеПредставлениеТипа(ЭлементРезультата.ЗначенияПараметров.П7.Значение),"ДокументСсылка.","")];
		 ТекДок = Документы[ВидДока.Имя].ПолучитьСсылку(GUID_ДокументERP);
		 Если НЕ ТекДок.ПолучитьОбъект()=Неопределено Тогда  
			 ЭлементРезультата.ЗначенияПараметров.П5.Значение = ПолучитьДанныеДокумента(ТекДок); 
		 КонецЕсли;
	 КонецЕсли;
 КонецЦикла;                      
 
 
 ПроцессорВывода.ЗакончитьВывод();
 ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры  
 
  
 
