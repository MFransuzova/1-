&НаСервере
Функция ЕстьФайлНаДиске(ИмяФайлаСПутем) Экспорт
	ФайлНаДиске = Новый Файл(ИмяФайлаСПутем);
	Возврат ФайлНаДиске.Существует();
КонецФункции

&НаСервере
Функция ПолучитьФайл(СтруктураФайла)
	Двоичное=Новый ДвоичныеДанные(СтруктураФайла.Файл);
	Адрес=ПоместитьВоВременноеХранилище(Двоичное,СтруктураФайла.УникальныйИдентификатор);
	Возврат Адрес
КонецФункции 

&НаСервере
Процедура УдалитьФайлыИВременноеХранилище(СтруктураФайлов) Экспорт
	Попытка
		Если СтруктураФайлов.Свойство("АдресВременногоФайла") Тогда
			УдалитьИзВременногоХранилища(СтруктураФайлов.АдресВременногоФайла); 
		КонецЕсли;
		Если СтруктураФайлов.Свойство("Файл") Тогда
			
			УдалитьФайлы(СтруктураФайлов.Файл);
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Мой механизм.Действие'"), УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура СформироватьФайлJSON(Структура) Экспорт
	СообщениеПользователю = Новый СообщениеПользователю;
	Если НЕ Структура.Свойство("Документы") ИЛИ НЕ Структура.Свойство("Тип") Тогда
		СообщениеПользователю.Текст = "Нет данных для выгрузки";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли; 	
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.ПроверятьСтруктуру = Ложь;
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(,Символы.Таб);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("json");
	Структура.Вставить("Файл",ИмяВременногоФайла);
	//ДвоичныеДанные = ПолучитьИзВременногоХранилища(Структура.Адрес); 	
	//ИмяВременногоФайла  = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
	ЗаписьJSON.ОткрытьФайл(ИмяВременногоФайла,,,ПараметрыЗаписиJSON);  
	//_________________________ Справочники ____________________________________
	
	Если Структура.Свойство("Справочники") Тогда
		Для каждого эл из Структура.Справочники Цикл       
			ЗаписьJSON.ЗаписатьНачалоОбъекта();
			ЗаписьJSON.ЗаписатьИмяСвойства(эл.Ключ);
			ЗаписьJSON.ЗаписатьНачалоМассива();
			Для каждого элЗ из эл.Значение Цикл
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				Для каждого элСправочника из элЗ Цикл
					Значение = элСправочника.Значение;
					Если НЕ ТипЗнч(Значение) = Тип("Строка") 
						ИЛИ  НЕ ТипЗнч(Значение) = Тип("Число") 
						ИЛИ НЕ ТипЗнч(Значение) = Тип("Булево") Тогда
						Значение = Строка(Значение);
					КонецЕсли;
					ЗаписьJSON.ЗаписатьИмяСвойства(элСправочника.Ключ);
					ЗаписьJSON.ЗаписатьЗначение(Значение);
				КонецЦикла;	
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЦикла;	  
			ЗаписьJSON.ЗаписатьКонецМассива();
		КонецЦикла;
	КонецЕсли;
	//_________________________ Документы _____________________________________  
	ЗаписьJSON.ЗаписатьИмяСвойства("Документы");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	Для каждого эл из  Структура.Документы Цикл
		ЗаписьJSON.ЗаписатьНачалоОбъекта();
		Для каждого ст из эл Цикл
			Значение = ст.Значение;
			Если НЕ ТипЗнч(Значение) = Тип("Строка") 
				ИЛИ  НЕ ТипЗнч(Значение) = Тип("Число") 
				ИЛИ НЕ ТипЗнч(Значение) = Тип("Булево") Тогда
				Значение = Строка(Значение);
			КонецЕсли;	  
			ЗаписьJSON.ЗаписатьИмяСвойства(ст.Ключ);
			ЗаписьJSON.ЗаписатьЗначение(Значение);
			Если  ст.Ключ = "ТабличнаяЧасть" Тогда
				ЗаписьJSON.ЗаписатьИмяСвойства("Начисление");
				ЗаписьJSON.ЗаписатьНачалоОбъекта();
				Для каждого ТЧстр из ст.Значение Цикл
					Для каждого элн из ТЧстр Цикл
						ЗначениеТЧ = элн.Значение;
						Если НЕ ТипЗнч(ЗначениеТЧ) = Тип("Строка") 
							ИЛИ  НЕ ТипЗнч(ЗначениеТЧ) = Тип("Число") 
							ИЛИ НЕ ТипЗнч(ЗначениеТЧ) = Тип("Булево") Тогда
							ЗначениеТЧ = Строка(ЗначениеТЧ);
						КонецЕсли;
						ЗаписьJSON.ЗаписатьИмяСвойства(элн.Ключ);
						ЗаписьJSON.ЗаписатьЗначение(ЗначениеТЧ);
					КонецЦикла;
				КонецЦикла;  
				ЗаписьJSON.ЗаписатьКонецОбъекта();
			КонецЕсли;
			
		КонецЦикла;	  
		ЗаписьJSON.ЗаписатьКонецОбъекта();
	КонецЦикла;	
	ЗаписьJSON.ЗаписатьКонецМассива();
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJSON.Закрыть();
	АдресВременногоФайла = ПолучитьФайл(Структура) ;
	Структура.Вставить("АдресВременногоФайла",АдресВременногоФайла);
	
	
КонецПроцедуры
