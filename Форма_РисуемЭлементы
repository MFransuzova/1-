&После("ПриСозданииНаСервере")
&НаСервере
Процедура ГАС_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЭтаФорма.Команды.Найти("ГАС_СоздатьПартииТМЦ_Светка") =  Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Команда_ГАС_СоздатьПартию                       = ЭтаФорма.Команды.Добавить("ГАС_СоздатьПартииТМЦ_Светка");
	Команда_ГАС_СоздатьПартию.Действие              = "СоздатьПартииТМЦВыполнить";
	
	Кнопка_ГАС_СоздатьПартию                        = Элементы.Добавить("Кнопка_ГАС_СоздатьПартию", Тип("КнопкаФормы"), Элементы.ТоварыГруппа);
	Кнопка_ГАС_СоздатьПартию.Вид                    = ВидКнопкиФормы.ОбычнаяКнопка;
	Кнопка_ГАС_СоздатьПартию.ИмяКоманды             = "ГАС_СоздатьПартииТМЦ_Светка";
	Кнопка_ГАС_СоздатьПартию.Заголовок              = "(ГАС) Создать партию";
	
	Группа_ГАС_Учета                                = Элементы.Добавить("ГруппаУчета", Тип("ГруппаФормы"), Элементы.ГруппаРеквизиты);
	Группа_ГАС_Учета.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
	Группа_ГАС_Учета.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа_ГАС_Учета.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Группа_ГАС_Учета.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
	Группа_ГАС_Учета.ОтображатьЗаголовок            = Ложь;
	
	Поле_ГАС_СтатьяРасходов                         = Элементы.Добавить("СтатьяРасходов", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_СтатьяРасходов.Вид                     = ВидПоляФормы.ПолеВвода;    
	Поле_ГАС_СтатьяРасходов.Заголовок               = "Статья расходов";
	Поле_ГАС_СтатьяРасходов.ПутьКДанным             = "Объект.СтатьяРасходов";
	
	Поле_ГАС_НаправлениеДеятельности                = Элементы.Добавить("НаправлениеДеятельности", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_НаправлениеДеятельности.Вид            = ВидПоляФормы.ПолеВвода;
	Поле_ГАС_НаправлениеДеятельности.Заголовок      = "Направление деятельности";
	Поле_ГАС_НаправлениеДеятельности.ПутьКДанным    = "Объект.НаправлениеДеятельности";
КонецПроцедуры

	Если Структура.ВидОбъекта = "ФизическиеЛица" Тогда
		//Сообщение.Текст = "ФЛ";
		//Сообщение.Сообщить();
		Дополнительно = Структура.Элементы.Добавить("Дополнительно",Тип("ГруппаФормы"),Структура.Элементы.Страницы);
		Дополнительно.Вид = ВидГруппыФормы.Страница;
		Дополнительно.Заголовок = "Дополнительно";
		
		НовыйЭлемент2 = Структура.Элементы.Добавить("НоваяНадпись",Тип("ДекорацияФормы"),Дополнительно);
		НовыйЭлемент2.Заголовок = "НоваяНадпись";
	КонецЕсли;
&НаСервере
Процедура ДобавлениеЭлементовФорм(Структура) Экспорт
	Сообщение = Новый СообщениеПользователю;
	Если НЕ Структура.Свойство("ВидОбъекта") Тогда
		Возврат;
	КонецЕсли;
	Если Структура.ВидОбъекта = "ФизическиеЛица" Тогда
		//Сообщение.Текст = "ФЛ";
		//Сообщение.Сообщить();
		Если Структура.Элементы.Найти("Дополнительно") = Неопределено Тогда
			Дополнительно = Структура.Элементы.Добавить("Дополнительно",Тип("ГруппаФормы"),Структура.Элементы.Страницы);
			Дополнительно.Вид = ВидГруппыФормы.Страница;
			Дополнительно.Заголовок = "Дополнительно";
		КонецЕсли;
		Если Структура.Элементы.Найти("ДополнительноРаспределение") = Неопределено Тогда
			ДополнительноРаспределение                                = Структура.Элементы.Добавить("ДополнительноРаспределение", Тип("ГруппаФормы"), Дополнительно);
			ДополнительноРаспределение.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
			ДополнительноРаспределение.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ДополнительноРаспределение.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
			ДополнительноРаспределение.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
			ДополнительноРаспределение.ОтображатьЗаголовок            = Ложь;
		КонецЕсли;
		МассивПеременных = Новый Массив;
		Для к=1 По 11 Цикл
			МассивПеременных.Добавить("Дополнительно"+Строка(к));
		КонецЦикла;
		МассивСозданныхГрппировок = Новый Массив;
		Для каждого мас из МассивПеременных Цикл
			Если Структура.Элементы.Найти(мас) = Неопределено Тогда
				мас                                = Структура.Элементы.Добавить(мас, Тип("ГруппаФормы"), ДополнительноРаспределение);
				мас.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
				мас.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				мас.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
				мас.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
				мас.ОтображатьЗаголовок            = Ложь;
				МассивСозданныхГрппировок.Добавить(мас);
			КонецЕсли;
		КонецЦикла;

		//_________________________________________ Дополнительно1 ______________________________________
		СоответсвиеЭлементов = Новый Соответствие ;
		СоответсвиеЭлементов.Вставить("КК_Row",          Новый Структура ("Колонка1,Колонка3,Колонка4,ГруппаРасположения","Row","","","Дополнительно1"));
		СоответсвиеЭлементов.Вставить("КК_ВидРаботника", Новый Структура ("Колонка1,Колонка3,Колонка4,ГруппаРасположения","Вид работника","","","Дополнительно2"));
		СоответсвиеЭлементов.Вставить("КК_ФилиалМСФО", Новый Структура ("Колонка1,Колонка3,Колонка4","Подразделение МСФО","","","Дополнительно3"));
		СоответсвиеЭлементов.Вставить("КК_ВидДеятельности", Новый Структура ("Колонка1,Колонка3,Колонка4","Вид деятельности","","","Дополнительно4"));
		СоответсвиеЭлементов.Вставить("КК_СуммаКомандировачных", Новый Структура ("Колонка1,Колонка3,Колонка4","Суточные","","","Дополнительно5"));
		СоответсвиеЭлементов.Вставить("КК_РаботаетВKonecranesС", Новый Структура ("Колонка1,Колонка3,Колонка4","Работает в Konecranes с","","","Дополнительно6"));
		СоответсвиеЭлементов.Вставить("КК_Подразделение", Новый Структура ("Колонка1,Колонка3,Колонка4","Подразделение","","","Дополнительно7"));
		СоответсвиеЭлементов.Вставить("КК_Местонахождение", Новый Структура ("Колонка1,Колонка3,Колонка4","Местонахождение","","","Дополнительно8"));
		СоответсвиеЭлементов.Вставить("КК_ДатаУвольнения", Новый Структура ("Колонка1,Колонка3,Колонка4","Дата увольнения","","","Дополнительно9"));
		СоответсвиеЭлементов.Вставить("КК_Function", Новый Структура ("Колонка1,Колонка3,Колонка4","Ответственный за согласование табеля","","","Дополнительно10"));
		
		СоответсвиеЭлементов.Вставить("ОтветственныйЗаСогласованиеТабеля", Новый Структура ("Колонка1,Колонка3,Колонка4","Местонахождение","","","Дополнительно8"));

		Для каждого элГруппы Из МассивПеременных Цикл
			Для каждого эл из СоответсвиеЭлементов Цикл   
				Если НЕ элГруппы = эл.Значение.ГруппаРасположения Тогда
					Продолжить;
				КонецЕсли;
				Если Структура.Элементы.Найти(эл.Ключ) = Неопределено Тогда
					КК_Row                         = Структура.Элементы.Добавить(эл.Ключ, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
					КК_Row.Вид                     = ВидПоляФормы.ПолеВвода;    
					КК_Row.Заголовок               = эл.Значение.Колонка1;
					КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Ключ;
					КлючИстории =  "История_"+Строка(эл.Ключ) ;
					Если Структура.Элементы.Найти(КлючИстории) = Неопределено Тогда
						Row_История                         = Структура.Элементы.Добавить(КлючИстории, Тип("ДекорацияФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
						Row_История.Гиперссылка             = Истина;
						Row_История.Заголовок               = "История";
						Row_История.УстановитьДействие("Нажатие", "ПерейтиПоСсылке_"+Строка(эл.Ключ));
					КонецЕсли;				
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
