///////////////////////////////// ИЗМЕНЕНИЕ ТЧ формы ////////////////////////////////////////////////////////////

&НаСервере        
Процедура ДБ_ДобавлениеЭлементовФормы()  
	// начало_______________    ГруппаНалоговыйУчетДт __________________________
	// + ДБ Французова 19.09.2023 (#2651 В журнале проводок колонки ВР и ПР) 
	ГруппаПР_ВР = Элементы.Добавить("ДБ_Дт_ПР_ВР", Тип("ГруппаФормы"), Элементы.ГруппаНалоговыйУчетДт); 
	ГруппаПР_ВР.Вид = ВидГруппыФормы.ГруппаКолонок;  
	ГруппаПР_ВР.Группировка = ГруппировкаКолонок.ВЯчейке;   
	
	ЭлементВРДт = Элементы.Добавить("ДБ_СуммаПРДт", Тип("ПолеФормы"), ГруппаПР_ВР);
	ЭлементВРДт.ПутьКДанным = "НаборЗаписей.СуммаПРДт";
	ЭлементВРДт.Заголовок = "ПР";   
	ЭлементВРДт.Вид                   = ВидПоляФормы.ПолеВвода; 
	
	ЭлементВРДт = Элементы.Добавить("ДБ_СуммаВРДт", Тип("ПолеФормы"), ГруппаПР_ВР);
	ЭлементВРДт.ПутьКДанным = "НаборЗаписей.СуммаВРДт";
	ЭлементВРДт.Заголовок = "ВР";   
	ЭлементВРДт.Вид                   = ВидПоляФормы.ПолеВвода; 
	
	// конец_______________    ГруппаНалоговыйУчетДт __________________________
	 // начало_______________    ГруппаНалоговыйУчетКт __________________________
	// + ДБ Французова 19.09.2023 (#2651 В журнале проводок колонки ВР и ПР) 
	ГруппаПР_ВР_К = Элементы.Добавить("ДБ_Кт_ПР_ВР", Тип("ГруппаФормы"), Элементы.ГруппаНалоговыйУчетКт); 
	ГруппаПР_ВР_К.Вид = ВидГруппыФормы.ГруппаКолонок;  
	ГруппаПР_ВР_К.Группировка = ГруппировкаКолонок.ВЯчейке;   
	
	ЭлементПРКт = Элементы.Добавить("ДБ_СуммаПРКт", Тип("ПолеФормы"), ГруппаПР_ВР_К);
	ЭлементПРКт.ПутьКДанным = "НаборЗаписей.СуммаПРКт";
	ЭлементПРКт.Заголовок = "ПР";   
	ЭлементПРКт.Вид                   = ВидПоляФормы.ПолеВвода; 
	
	ЭлементВРКт = Элементы.Добавить("ДБ_СуммаВРКт", Тип("ПолеФормы"), ГруппаПР_ВР_К);
	ЭлементВРКт.ПутьКДанным = "НаборЗаписей.СуммаВРКт";
	ЭлементВРКт.Заголовок = "ВР";   
	ЭлементВРКт.Вид                   = ВидПоляФормы.ПолеВвода; 
	
	// конец_______________    ГруппаНалоговыйУчетДт __________________________

	//Элементы.Переместить(ЭлементФайлы,Элементы.СписокДокументыПродажи,Элементы.СписокДокументыПродажи.ПодчиненныеЭлементы[0]);
	// - ДБ Французова 19.09.2023 (#2651 В журнале проводок колонки ВР и ПР)
КонецПроцедуры








/////////////////////////////////    Изменяем запрос и динамический список //////////////////////////////////////
// + ДБ Французова 11.01.2023  (2024 изменить браузер вывода)
// + ДБ Французова 11.01.2023  (2024 изменить браузер вывода)
// + ДБ Французова 11.01.2023 1998 (прикрепление документов продаж)
&Вместо("ТекстЗапросаСписокДокументыПродажи")
&НаСервере
Функция ДБ_ТекстЗапросаСписокДокументыПродажи()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	РеестрДокументов.Ссылка КАК Ссылка,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.Статус КАК Статус,
	|	РеестрДокументов.Проведен КАК Проведен,
	|	РеестрДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	РеестрДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РеестрДокументов.Партнер КАК Партнер,
	|	ВЫРАЗИТЬ(РеестрДокументов.Контрагент.Ключ КАК Справочник.Контрагенты) КАК Контрагент,
	|	РеестрДокументов.Контрагент КАК КонтрагентКлюч,
	|	РеестрДокументов.Договор КАК Договор,
	|	РеестрДокументов.Организация КАК Организация,
	|	РеестрДокументов.Подразделение КАК Подразделение,
	|	РеестрДокументов.МестоХранения КАК МестоХранения,
	|	ВЫРАЗИТЬ(РеестрДокументов.МестоХранения.Ключ КАК Справочник.Склады) КАК Склад,
	|	РеестрДокументов.Валюта КАК Валюта,
	|	РеестрДокументов.Сумма КАК СуммаДокумента,
	|	РеестрДокументов.Ответственный КАК Менеджер,
	|	РеестрДокументов.Автор КАК Автор,
	|	РеестрДокументов.Комментарий КАК Комментарий,
	|	РеестрДокументов.НомерПервичногоДокумента КАК НомерВходящегоДокумента,
	|	РеестрДокументов.ДатаПервичногоДокумента КАК ДатаВходящегоДокумента,
	|	РеестрДокументов.Дополнительно КАК Дополнительно,
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|	СостоянияЭД.СостояниеЭДО КАК СостояниеВерсииЭД,
	|	СостоянияЭД.ПредставлениеСостояния КАК ПредставлениеСостояния,
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|	ВЫБОР
	|		КОГДА ДокументыСОшибкамиПроверкиКонтрагентов.Документ ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьОшибкиПроверкиКонтрагентов,
	|	ВЫБОР
	|		КОГДА РеестрДокументов.Проведен
	|			ТОГДА 0
	|		КОГДА РеестрДокументов.ПометкаУдаления
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК НестандартнаяКартинка,
	|	РеестрДокументов.ДополнительнаяЗапись КАК ДополнительнаяЗапись,
	|	РеестрДокументов.ТипСсылки КАК ТипСсылки,
	|	&СтатусПроверки КАК СтатусПроверки,
	|	&ИндикаторПроверки КАК ИндикаторПроверки,
	|	ТИПЗНАЧЕНИЯ(РеестрДокументов.Ссылка) КАК ТипЗначения,
	// СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	|	NULL КАК СостояниеОригиналаПервичногоДокумента,
	|	ИСТИНА КАК ОбщееСостояние,
	|	0 КАК СостояниеОригиналПолучен,
	// Конец СтандартныеПодсистемы.УчетОригиналовПервичныхДокументов
	|	РеестрДокументов.СторноИсправление КАК СторноИсправление,
	|	ВЫБОР 
	|		КОГДА НЕ РеестрДокументов.СторноИсправление
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеестрДокументов.СторнируемыйДокумент
	|	КОНЕЦ КАК СторнируемыйИсправляемыйДокумент 
			// +  ДБ Французова 11.01.2023 (1998 вывести скрепку по документам)
	|, ВЫБОР
	|	КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|		ТОГДА 0
	|	КОГДА НаличиеФайлов.ЕстьФайлы
	|		ТОГДА 1
	|	ИНАЧЕ 0
	|КОНЕЦ  ЕстьФайлы
	// -  ДБ Французова 11.01.2023 (1998 вывести скрепку по документам)
	|ИЗ
	|	РегистрСведений.РеестрДокументов КАК РеестрДокументов
	|		{
	// ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияПоОбъектамУчетаЭДО КАК СостоянияЭД
	|		ПО (СостоянияЭД.СсылкаНаОбъект = РеестрДокументов.Ссылка)
	// Конец ЭлектронноеВзаимодействие.ОбменСКонтрагентами
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыСОшибкамиПроверкиКонтрагентов КАК ДокументыСОшибкамиПроверкиКонтрагентов
	|		ПО РеестрДокументов.Ссылка = ДокументыСОшибкамиПроверкиКонтрагентов.Документ
	|			И (&ИспользованиеПроверкиВозможно)  
	// + ДБ Французова 11.01.2023 (1998 вывести скрепку по документам)
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|ПО РеестрДокументов.Ссылка = НаличиеФайлов.ОбъектСФайлами 
	// - ДБ Французова 11.01.2023 (1998 вывести скрепку по документам)
	|}
	|{ГДЕ
	|	РеестрДокументов.Ссылка.* КАК Ссылка,
	|	РеестрДокументов.МестоХранения.* КАК МестоХранения,
	|	(ВЫРАЗИТЬ(РеестрДокументов.МестоХранения.Ключ КАК Справочник.Склады)).* КАК Склад,
	|	РеестрДокументов.Организация.* КАК Организация,
	|	РеестрДокументов.ДатаДокументаИБ КАК Дата,
	|	РеестрДокументов.НомерДокументаИБ КАК Номер,
	|	РеестрДокументов.Статус КАК Статус,
	|	РеестрДокументов.ТипСсылки КАК ТипСсылки,
	|	РеестрДокументов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РеестрДокументов.Партнер.* КАК Партнер,
	|	(ВЫРАЗИТЬ(РеестрДокументов.Контрагент.Ключ КАК Справочник.Контрагенты)).* КАК Контрагент,
	|	РеестрДокументов.Договор.* КАК Договор,
	|	РеестрДокументов.Подразделение.* КАК Подразделение,
	|	РеестрДокументов.Ответственный.* КАК Менеджер,
	|	РеестрДокументов.Автор.* КАК Автор,
	|	РеестрДокументов.Дополнительно КАК Дополнительно,
	|	РеестрДокументов.Комментарий КАК Комментарий,
	|	РеестрДокументов.Проведен КАК Проведен,
	|	РеестрДокументов.ПометкаУдаления КАК ПометкаУдаления,
	|	((РеестрДокументов.ДатаДокументаИБ >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|			И (РеестрДокументов.ДатаДокументаИБ <= &КонецПериода
	|				ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1)))}";
	
	Возврат ТекстЗапроса;
	
КонецФункции  
// - ДБ Французова 11.01.2023 1998 (прикрепление документов продаж)
// + ДБ Французова 30.01.2023   (1998 вывести скрепку по документам)

&НаСервере
Процедура ДБ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	НовыйТекстЗапроса = ДБ_ТекстЗапросаСписокДокументыПродажи();
	СписокДокументыПродажи.ТекстЗапроса = НовыйТекстЗапроса; 
	ДБ_ДобавитьЭлементыСписка();
КонецПроцедуры

// - ДБ Французова 30.01.2023    (1998 вывести скрепку по документам) 
// + ДБ Французова 30.01.2023   (1998 вывести скрепку по документам) 
&НаСервере
Процедура ДБ_ДобавитьЭлементыСписка()    
	ЭлементФайлы = Элементы.Добавить("СписокДокументыПродажиЕстьФайлы", Тип("ПолеФормы"), Элементы.СписокДокументыПродажи);
	ЭлементФайлы.ПутьКДанным = "СписокДокументыПродажи.ЕстьФайлы";
	ЭлементФайлы.Заголовок = "";   
	ЭлементФайлы.ПоложениеЗаголовка    = ПоложениеЗаголовкаЭлементаФормы.Нет;   
	ЭлементФайлы.Вид                = ВидПоляФормы.ПолеКартинки; 
	ЭлементФайлы.КартинкаЗначений    = БиблиотекаКартинок.КоллекцияСкрепка;
	ЭлементФайлы.КартинкаШапки       = БиблиотекаКартинок.Скрепка;    
	
	Элементы.Переместить(ЭлементФайлы,Элементы.СписокДокументыПродажи,Элементы.СписокДокументыПродажи.ПодчиненныеЭлементы[0]);
КонецПроцедуры
// - ДБ Французова 30.01.2023    (1998 вывести скрепку по документам)



////////////////////////////////////////////////////////////////////////////////////////////////////////////////

&После("ПриСозданииНаСервере")
&НаСервере
Процедура ГАС_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЭтаФорма.Команды.Найти("ГАС_СоздатьПартииТМЦ_Светка") =  Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Команда_ГАС_СоздатьПартию                       = ЭтаФорма.Команды.Добавить("ГАС_СоздатьПартииТМЦ_Светка");
	Команда_ГАС_СоздатьПартию.Действие              = "СоздатьПартииТМЦВыполнить";
	
	Кнопка_ГАС_СоздатьПартию                        = Элементы.Добавить("Кнопка_ГАС_СоздатьПартию", Тип("КнопкаФормы"), Элементы.ТоварыГруппа);
	Кнопка_ГАС_СоздатьПартию.Вид                    = ВидКнопкиФормы.ОбычнаяКнопка;
	Кнопка_ГАС_СоздатьПартию.ИмяКоманды             = "ГАС_СоздатьПартииТМЦ_Светка";
	Кнопка_ГАС_СоздатьПартию.Заголовок              = "(ГАС) Создать партию";
	
	Группа_ГАС_Учета                                = Элементы.Добавить("ГруппаУчета", Тип("ГруппаФормы"), Элементы.ГруппаРеквизиты);
	Группа_ГАС_Учета.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
	Группа_ГАС_Учета.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа_ГАС_Учета.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Группа_ГАС_Учета.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
	Группа_ГАС_Учета.ОтображатьЗаголовок            = Ложь;
	
	Поле_ГАС_СтатьяРасходов                         = Элементы.Добавить("СтатьяРасходов", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_СтатьяРасходов.Вид                     = ВидПоляФормы.ПолеВвода;    
	Поле_ГАС_СтатьяРасходов.Заголовок               = "Статья расходов";
	Поле_ГАС_СтатьяРасходов.ПутьКДанным             = "Объект.СтатьяРасходов";
	
	Поле_ГАС_НаправлениеДеятельности                = Элементы.Добавить("НаправлениеДеятельности", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_НаправлениеДеятельности.Вид            = ВидПоляФормы.ПолеВвода;
	Поле_ГАС_НаправлениеДеятельности.Заголовок      = "Направление деятельности";
	Поле_ГАС_НаправлениеДеятельности.ПутьКДанным    = "Объект.НаправлениеДеятельности";
КонецПроцедуры

// + АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица

&НаСервере
Процедура ДобавлениеЭлементовФорм(Структура) Экспорт
	Сообщение = Новый СообщениеПользователю;
	Если НЕ Структура.Свойство("ВидОбъекта") Тогда
		Возврат;
	КонецЕсли;
	Если Структура.ВидОбъекта = "ФизическиеЛица" Тогда
		//Сообщение.Текст = "ФЛ";
		//Сообщение.Сообщить();
		Если Структура.Элементы.Найти("Дополнительно") = Неопределено Тогда
			Дополнительно = Структура.Элементы.Добавить("Дополнительно",Тип("ГруппаФормы"),Структура.Элементы.Страницы);
			Дополнительно.Вид = ВидГруппыФормы.Страница;
			Дополнительно.Заголовок = "Дополнительно";
		КонецЕсли;
		Если Структура.Элементы.Найти("ДополнительноРаспределение") = Неопределено Тогда
			ДополнительноРаспределение                                = Структура.Элементы.Добавить("ДополнительноРаспределение", Тип("ГруппаФормы"), Дополнительно);
			ДополнительноРаспределение.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
			ДополнительноРаспределение.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ДополнительноРаспределение.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
			ДополнительноРаспределение.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
			ДополнительноРаспределение.ОтображатьЗаголовок            = Ложь;
		КонецЕсли;
		
		//_________________________________________ Дополнительно1 ______________________________________
		СоответсвиеЭлементов = Новый Соответствие ;
		СтруктураРеквизитовВывода =  "
		|ИмяНаФорме,
		|ТипВводаПоля,
		|Колонка2,
		|ТипВводаКолонка2,
		|ПредставлениеКолонка2,
		|Колонка3,
		|ТипВводаКолонка3,
		|ПредставлениеКолонка3,
		|ГруппаРасположения";
		
		СоответсвиеЭлементов.Вставить("КК_Row",                            Новый Структура (СтруктураРеквизитовВывода,"Row","ПолеВвода",Неопределено,Неопределено,Неопределено,"КК_НеУчитыватьВОтчетности","ПолеФлажка","Не учитывать в отчетности","Дополнительно1"));
		СоответсвиеЭлементов.Вставить("КК_ВидРаботника",                   Новый Структура (СтруктураРеквизитовВывода,"Вид работника","ПолеВвода",Неопределено,Неопределено,Неопределено,"КК_ЧастичнаяЗагрузка","ПолеФлажка","Частичная загрузка","Дополнительно2"));
		СоответсвиеЭлементов.Вставить("КК_ФилиалМСФО",                     Новый Структура (СтруктураРеквизитовВывода,"Подразделение МСФО","ПолеВвода",Неопределено,Неопределено,Неопределено,"КК_КоличествоЧасов","ПолеВвода","Количество дней (в неделю)","Дополнительно3"));
		СоответсвиеЭлементов.Вставить("КК_ВидДеятельности",                Новый Структура (СтруктураРеквизитовВывода,"Вид деятельности","ПолеВвода",Неопределено,Неопределено,Неопределено,"КК_Уволен","ПолеВвода","Вид уволнения","Дополнительно4"));
		СоответсвиеЭлементов.Вставить("КК_СуммаКомандировачных",           Новый Структура (СтруктураРеквизитовВывода,"Суточные","ПолеВвода",Неопределено,Неопределено,Неопределено,"КК_Level","ПолеВвода","Level","Дополнительно5"));
		СоответсвиеЭлементов.Вставить("КК_РаботаетВKonecranesС",           Новый Структура (СтруктураРеквизитовВывода,"Работает в Konecranes с","ПолеВвода",Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,"Дополнительно6"));
		СоответсвиеЭлементов.Вставить("КК_Подразделение",                  Новый Структура (СтруктураРеквизитовВывода,"Подразделение","ПолеВвода",Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,"Дополнительно7"));
		СоответсвиеЭлементов.Вставить("КК_Местонахождение",                Новый Структура (СтруктураРеквизитовВывода,"Местонахождение","ПолеВвода",Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,"Дополнительно8"));
		СоответсвиеЭлементов.Вставить("КК_ДатаУвольнения",                 Новый Структура (СтруктураРеквизитовВывода,"ПолеВвода","КК_УволенныйСотрудник","ПолеФлажка","Уволен",Неопределено,Неопределено,Неопределено,"Дополнительно9"));
		СоответсвиеЭлементов.Вставить("КК_Function",                       Новый Структура (СтруктураРеквизитовВывода,"Ответственный за согласование табеля","ПолеВвода",Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,"Дополнительно10"));
		СоответсвиеЭлементов.Вставить("ОтветственныйЗаСогласованиеТабеля", Новый Структура (СтруктураРеквизитовВывода,"Местонахождение","ПолеВвода",Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,Неопределено,"Дополнительно11"));
		макс = 0;       
		Для каждого имяНаФорме ИЗ СоответсвиеЭлементов Цикл
			Если   макс < СтрДлина(имяНаФорме.Значение.ИмяНаФорме)  Тогда
				макс = СтрДлина(имяНаФорме.Значение.ИмяНаФорме);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого имяНаФорме ИЗ СоответсвиеЭлементов Цикл
			Если   макс > СтрДлина(имяНаФорме.Значение.ИмяНаФорме)  Тогда
				пробелы =  макс - СтрДлина(имяНаФорме.Значение.ИмяНаФорме);
				СимПробела = " ";
				Для к = 0 по пробелы Цикл
				имяНаФорме.Значение.ИмяНаФорме = Строка(имяНаФорме.Значение.ИмяНаФорме)+СимПробела;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;	
		
		Для к=1 По 11 Цикл
			Если Структура.Элементы.Найти("Дополнительно"+Строка(к)) = Неопределено Тогда
				мас                                = Структура.Элементы.Добавить("Дополнительно"+Строка(к), Тип("ГруппаФормы"), ДополнительноРаспределение);
				мас.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
				мас.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				мас.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
				мас.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
				мас.ОтображатьЗаголовок            = Ложь;
			КонецЕсли;
			Для каждого эл из СоответсвиеЭлементов Цикл   
				Если НЕ "Дополнительно"+Строка(к) = эл.Значение.ГруппаРасположения Тогда
					Продолжить;
				КонецЕсли;
				Если Структура.Элементы.Найти(эл.Ключ) = Неопределено Тогда
					КК_Row                         = Структура.Элементы.Добавить(эл.Ключ, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
					КК_Row.Вид                     = ВидПоляФормы[эл.Значение.ТипВводаПоля];    
					КК_Row.Заголовок               = эл.Значение.ИмяНаФорме;
					КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Ключ;
					КК_Row.Ширина                  = 20;
					КлючИстории =  "История_"+Строка(эл.Ключ) ;
					Если НЕ эл.Значение.Колонка2 = Неопределено Тогда
						КК_Row                         = Структура.Элементы.Добавить(эл.Значение.Колонка2, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
						КК_Row.Вид                     = ВидПоляФормы[эл.Значение.ТипВводаКолонка2];    
						КК_Row.Заголовок               = эл.Значение.ПредставлениеКолонка2;
						КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Значение.Колонка2;
					Иначе
						
						Если Структура.Элементы.Найти(КлючИстории) = Неопределено Тогда
							Row_История                         = Структура.Элементы.Добавить(КлючИстории, Тип("ДекорацияФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
							Row_История.Гиперссылка             = Истина;
							Row_История.Заголовок               = "История";
							Row_История.УстановитьДействие("Нажатие", "ПерейтиПоСсылке_"+Строка(эл.Ключ));
							Row_История.Ширина                  = 10;	
						КонецЕсли;
					КонецЕсли;
					Если НЕ эл.Значение.Колонка3 = Неопределено Тогда
						КК_Row                         = Структура.Элементы.Добавить(эл.Значение.Колонка3, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
						КК_Row.Вид                     = ВидПоляФормы[эл.Значение.ТипВводаКолонка3];    
						КК_Row.Заголовок               = эл.Значение.ПредставлениеКолонка3;
						КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Значение.Колонка3;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
// - АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица



_______________________________________________________________________ Физ Лица 
"#Область АИГ_Разработка
// + АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
&НаСервере
Процедура 	АИГ_ОбработкаСобытийЭлементов()
	Если НЕ Элементы.Найти(""КК_Row"") = Неопределено Тогда
		
	КонецЕсли;
	Если НЕ Элементы.Найти(""КК_ВидДеятельности"") = Неопределено Тогда
		Элементы.КК_ВидДеятельности.УстановитьДействие(""ПриИзменении"",""АИГ_КК_ВидДеятельности_ПриИзменнии"");
	КонецЕсли;
	
	Если НЕ Элементы.Найти(""КК_ЧастичнаяЗагрузка"") = Неопределено Тогда
		Элементы.КК_ЧастичнаяЗагрузка.УстановитьДействие(""ПриИзменении"",""АИГ_КК_ЧастичнаяЗагрузка_ПриИзменнии"");
	КонецЕсли;

КонецПроцедуры

// - АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
// + АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
&НаСервере
Процедура АИГ_Значения_ПриИзменении(СтруктураСобытий)         
	// _________________ Вид деятельности ______________________________________    
	// Код взят из базы Konecranes_Old  и рефакторинг под платформу (1С:Предприятие 8.3 (8.3.18.1289))  
	//Справочники.КК_ВидыДеятельности.НайтиПоКоду(""00007"") = General
	Если СтруктураСобытий.Событие = ""Изменение"" ИЛИ СтруктураСобытий.Событие = ""Обновление"" Тогда
		КК_ВидДеятельности = ФизическоеЛицо.КК_ВидДеятельности;
		
		Элементы.КК_Function.Видимость = КК_ВидДеятельности = Справочники.КК_ВидыДеятельности.НайтиПоКоду(""00007"");
		Если НЕ КК_ВидДеятельности = Справочники.КК_ВидыДеятельности.НайтиПоКоду(""00007"") Тогда
			ФизическоеЛицо.КК_Function = Справочники.КК_Functions.ПустаяСсылка();
		КонецЕсли;
		Элементы.История_КК_Function.Видимость = КК_ВидДеятельности = Справочники.КК_ВидыДеятельности.НайтиПоКоду(""00007"");
		
		Элементы.КК_КоличествоЧасов.Видимость = ФизическоеЛицо.КК_ЧастичнаяЗагрузка;
	КонецЕсли;
	//___________________________________________________________________________	
КонецПроцедуры
// - АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица

// + АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
&НаКлиенте
Процедура АИГ_КК_ВидДеятельности_ПриИзменнии(Элемент)
	СтруктураСобытий = Новый Структура;
	СтруктураСобытий.Вставить(""Событие"",""Изменение"");
	СтруктураСобытий.Вставить(""ЭлементСобытия"",""КК_ВидДеятельности"");
	АИГ_Значения_ПриИзменении(СтруктураСобытий);
КонецПроцедуры
// - АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
// + АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
&НаКлиенте
Процедура АИГ_КК_ЧастичнаяЗагрузка_ПриИзменнии(Элемент)
	СтруктураСобытий = Новый Структура;
	СтруктураСобытий.Вставить(""Событие"",""Изменение"");
	СтруктураСобытий.Вставить(""ЭлементСобытия"",""КК_ЧастичнаяЗагрузка"");
	АИГ_Значения_ПриИзменении(СтруктураСобытий);
КонецПроцедуры
// - АИГ Французова 10.11.2021 Добавление элементов Формы Спр.ФизическиеЛица

#КонецОбласти"
