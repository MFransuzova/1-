&После("ПриСозданииНаСервере")
&НаСервере
Процедура ГАС_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЭтаФорма.Команды.Найти("ГАС_СоздатьПартииТМЦ_Светка") =  Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Команда_ГАС_СоздатьПартию                       = ЭтаФорма.Команды.Добавить("ГАС_СоздатьПартииТМЦ_Светка");
	Команда_ГАС_СоздатьПартию.Действие              = "СоздатьПартииТМЦВыполнить";
	
	Кнопка_ГАС_СоздатьПартию                        = Элементы.Добавить("Кнопка_ГАС_СоздатьПартию", Тип("КнопкаФормы"), Элементы.ТоварыГруппа);
	Кнопка_ГАС_СоздатьПартию.Вид                    = ВидКнопкиФормы.ОбычнаяКнопка;
	Кнопка_ГАС_СоздатьПартию.ИмяКоманды             = "ГАС_СоздатьПартииТМЦ_Светка";
	Кнопка_ГАС_СоздатьПартию.Заголовок              = "(ГАС) Создать партию";
	
	Группа_ГАС_Учета                                = Элементы.Добавить("ГруппаУчета", Тип("ГруппаФормы"), Элементы.ГруппаРеквизиты);
	Группа_ГАС_Учета.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
	Группа_ГАС_Учета.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Группа_ГАС_Учета.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Право;
	Группа_ГАС_Учета.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
	Группа_ГАС_Учета.ОтображатьЗаголовок            = Ложь;
	
	Поле_ГАС_СтатьяРасходов                         = Элементы.Добавить("СтатьяРасходов", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_СтатьяРасходов.Вид                     = ВидПоляФормы.ПолеВвода;    
	Поле_ГАС_СтатьяРасходов.Заголовок               = "Статья расходов";
	Поле_ГАС_СтатьяРасходов.ПутьКДанным             = "Объект.СтатьяРасходов";
	
	Поле_ГАС_НаправлениеДеятельности                = Элементы.Добавить("НаправлениеДеятельности", Тип("ПолеФормы"), Элементы.ГруппаУчета);
	Поле_ГАС_НаправлениеДеятельности.Вид            = ВидПоляФормы.ПолеВвода;
	Поле_ГАС_НаправлениеДеятельности.Заголовок      = "Направление деятельности";
	Поле_ГАС_НаправлениеДеятельности.ПутьКДанным    = "Объект.НаправлениеДеятельности";
КонецПроцедуры

// + АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
//Функция ПолучитьСтруктуруРеквзитовФЛ()
//	СтруктураФЛ = Новый  Структура;
//	СтруктураФЛ.Вставить("ИмяНаФорме",Неопределено);
//	СтруктураФЛ.Вставить("ТипВводаПоля",Неопределено);
//	СтруктураФЛ.Вставить("Колонка4",Неопределено);
//	СтруктураФЛ.Вставить("ГруппаРасположения",Неопределено);
//	
//	Возврат СтруктураФЛ;
//КонецФункции

// - АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
// + АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица

&НаСервере
Процедура ДобавлениеЭлементовФорм(Структура) Экспорт
	Сообщение = Новый СообщениеПользователю;
	Если НЕ Структура.Свойство("ВидОбъекта") Тогда
		Возврат;
	КонецЕсли;
	Если Структура.ВидОбъекта = "ФизическиеЛица" Тогда
		//Сообщение.Текст = "ФЛ";
		//Сообщение.Сообщить();
		Если Структура.Элементы.Найти("Дополнительно") = Неопределено Тогда
			Дополнительно = Структура.Элементы.Добавить("Дополнительно",Тип("ГруппаФормы"),Структура.Элементы.Страницы);
			Дополнительно.Вид = ВидГруппыФормы.Страница;
			Дополнительно.Заголовок = "Дополнительно";
		КонецЕсли;
		Если Структура.Элементы.Найти("ДополнительноРаспределение") = Неопределено Тогда
			ДополнительноРаспределение                                = Структура.Элементы.Добавить("ДополнительноРаспределение", Тип("ГруппаФормы"), Дополнительно);
			ДополнительноРаспределение.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
			ДополнительноРаспределение.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
			ДополнительноРаспределение.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
			ДополнительноРаспределение.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
			ДополнительноРаспределение.ОтображатьЗаголовок            = Ложь;
		КонецЕсли;
		
		//_________________________________________ Дополнительно1 ______________________________________
		СоответсвиеЭлементов = Новый Соответствие ;
		СоответсвиеЭлементов.Вставить("КК_Row",                            Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Row","ПолеВвода",Неопределено,,,"Дополнительно1"));
		СоответсвиеЭлементов.Вставить("КК_ВидРаботника",                   Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Вид работника","ПолеВвода",Неопределено,,,"Дополнительно2"));
		СоответсвиеЭлементов.Вставить("КК_ФилиалМСФО",                     Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Подразделение МСФО","ПолеВвода",Неопределено,,,"Дополнительно3"));
		СоответсвиеЭлементов.Вставить("КК_ВидДеятельности",                Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Вид деятельности","ПолеВвода",Неопределено,,,"Дополнительно4"));
		СоответсвиеЭлементов.Вставить("КК_СуммаКомандировачных",           Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Суточные","ПолеВвода",Неопределено,,,"Дополнительно5"));
		СоответсвиеЭлементов.Вставить("КК_РаботаетВKonecranesС",           Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Работает в Konecranes с","ПолеВвода",Неопределено,,,"Дополнительно6"));
		СоответсвиеЭлементов.Вставить("КК_Подразделение",                  Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Подразделение","ПолеВвода",Неопределено,,,"Дополнительно7"));
		СоответсвиеЭлементов.Вставить("КК_Местонахождение",                Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Местонахождение","ПолеВвода",Неопределено,,,"Дополнительно8"));
		СоответсвиеЭлементов.Вставить("КК_ДатаУвольнения",                 Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Дата увольнения","ПолеВвода","КК_УволенныйСотрудник","ПолеФлажка","Уволен","Дополнительно9"));
		СоответсвиеЭлементов.Вставить("КК_Function",                       Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Ответственный за согласование табеля","ПолеВвода",Неопределено,,,"Дополнительно10"));
		СоответсвиеЭлементов.Вставить("ОтветственныйЗаСогласованиеТабеля", Новый Структура ("ИмяНаФорме,ТипВводаПоля,Колонка2,ТипВводаКолонка2,ПредставлениеКолонка2,ГруппаРасположения","Местонахождение","ПолеВвода",Неопределено,,,"Дополнительно11"));
		макс = 0;       
		Для каждого имяНаФорме ИЗ СоответсвиеЭлементов Цикл
			Если   макс < СтрДлина(имяНаФорме.Значение.ИмяНаФорме)  Тогда
				макс = СтрДлина(имяНаФорме.Значение.ИмяНаФорме);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого имяНаФорме ИЗ СоответсвиеЭлементов Цикл
			Если   макс > СтрДлина(имяНаФорме.Значение.ИмяНаФорме)  Тогда
				пробелы =  макс - СтрДлина(имяНаФорме.Значение.ИмяНаФорме);
				СимПробела = " ";
				Для к = 1 по пробелы Цикл
				имяНаФорме.Значение.ИмяНаФорме = Строка(имяНаФорме.Значение.ИмяНаФорме)+СимПробела;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;	
		
		Для к=1 По 11 Цикл
			Если Структура.Элементы.Найти("Дополнительно"+Строка(к)) = Неопределено Тогда
				мас                                = Структура.Элементы.Добавить("Дополнительно"+Строка(к), Тип("ГруппаФормы"), ДополнительноРаспределение);
				мас.Вид                            = ВидГруппыФормы.ОбычнаяГруппа;                                             
				мас.Группировка                    = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
				мас.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
				мас.ВертикальноеПоложениеВГруппе   = ВертикальноеПоложениеЭлемента.Верх;
				мас.ОтображатьЗаголовок            = Ложь;
			КонецЕсли;
			Для каждого эл из СоответсвиеЭлементов Цикл   
				Если НЕ "Дополнительно"+Строка(к) = эл.Значение.ГруппаРасположения Тогда
					Продолжить;
				КонецЕсли;
				Если Структура.Элементы.Найти(эл.Ключ) = Неопределено Тогда
					КК_Row                         = Структура.Элементы.Добавить(эл.Ключ, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
					КК_Row.Вид                     = ВидПоляФормы[эл.Значение.ТипВводаПоля];    
					КК_Row.Заголовок               = эл.Значение.ИмяНаФорме;
					КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Ключ;
					КК_Row.Ширина                  = 20;
					КлючИстории =  "История_"+Строка(эл.Ключ) ;
					Если НЕ эл.Значение.Колонка2 = Неопределено Тогда
						КК_Row                         = Структура.Элементы.Добавить(эл.Значение.Колонка2, Тип("ПолеФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
						КК_Row.Вид                     = ВидПоляФормы[эл.Значение.ТипВводаКолонка2];    
						КК_Row.Заголовок               = эл.Значение.ПредставлениеКолонка2;
						КК_Row.ПутьКДанным             = "ФизическоеЛицо."+эл.Значение.Колонка2;
						Продолжить;
					КонецЕсли;
					Если Структура.Элементы.Найти(КлючИстории) = Неопределено Тогда
						Row_История                         = Структура.Элементы.Добавить(КлючИстории, Тип("ДекорацияФормы"), Структура.Элементы[эл.Значение.ГруппаРасположения]);
						Row_История.Гиперссылка             = Истина;
						Row_История.Заголовок               = "История";
						Row_История.УстановитьДействие("Нажатие", "ПерейтиПоСсылке_"+Строка(эл.Ключ));
						Row_История.Ширина                  = 10;	
					КонецЕсли;				
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры
// - АИГ Французова 09.11.2021 Добавление элементов Формы Спр.ФизическиеЛица
