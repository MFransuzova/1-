
&НаСервере
Процедура ЗаполнитьТабКлючей(МассивКлючей,ТабСоответствия)    
	
	//019f4842-c9e4-11ec-bbf2-04d4c45cacc7	09090500000000000	Хранение документов (Нулевой КРБ)   
	//bbf9b5e7-90f7-11ed-935a-00155d07a600	09090140590059000	ЕАЭС Нулевой КРБ
    МассивКлючей.Добавить("019f4842-c9e4-11ec-bbf2-04d4c45cacc7"); 
	ТабСоответствия.Вставить("019f4842-c9e4-11ec-bbf2-04d4c45cacc7","bbf9b5e7-90f7-11ed-935a-00155d07a600");  
	//ec649e31-c9e1-11ec-bbf2-04d4c45cacc7	09090500000000000	Хранение документов         
	 //7faf3e07-90f7-11ed-935a-00155d07a600	09090140590059000	ЕАЭС КИФ      
	МассивКлючей.Добавить("ec649e31-c9e1-11ec-bbf2-04d4c45cacc7");   // нет в списке
	ТабСоответствия.Вставить("ec649e31-c9e1-11ec-bbf2-04d4c45cacc7","7faf3e07-90f7-11ed-935a-00155d07a600");  
	
	//373a868f-c9e0-11ec-bbf2-04d4c45cacc7	09090500000000150	Хранение документов (Безвозмездные денежные поступления текущего характера)
	//6d743f4f-90f7-11ed-935a-00155d07a600	09090140590059150	ЕАЭС Безвозмездные денежные поступления текущего характера 
    МассивКлючей.Добавить("373a868f-c9e0-11ec-bbf2-04d4c45cacc7");
	ТабСоответствия.Вставить("373a868f-c9e0-11ec-bbf2-04d4c45cacc7","6d743f4f-90f7-11ed-935a-00155d07a600");
	
	//ТабСоответствия.Вставить("","");

КонецПроцедуры

&НаСервере
Процедура ЗаменаРегистраДоп(Структура)    
	Запрос = Новый Запрос;
	Запрос.Текст = "  
	|ВЫБРАТЬ  ПЕРВЫЕ 1
	|Рег.* 
	|
	|ИЗ РегистрСведений.ЗначенияКолонокДополнительныхТабличныхЧастей КАК Рег 
	|ГДЕ 
	//|//Рег.Объект = &Об  
	|Рег.Объект.Дата   >= НАЧАЛОПЕРИОДА(&ДатаД,ДЕНЬ)
	|И  
	|ТИПЗНАЧЕНИЯ(Рег.Объект) = ТИП(Документ.ЗаявкаНаКассовыйРасход)
	|И Рег.Значение = &КПС
	|";    
	
	МассивКлючей = Новый Массив; 
	ТабСоответствия = Новый Соответствие;
	ЗаполнитьТабКлючей(МассивКлючей,ТабСоответствия); 
	
	УИД = МассивКлючей[1]; 
	ЧтоУ = Новый УникальныйИдентификатор(УИД);   
	ЧтоИД = Справочники.КлассификационныеПризнакиСчетов.ПолучитьСсылку(ЧтоУ);     
	
	Запрос.УстановитьПараметр("КПС",ЧтоИД);
	Запрос.УстановитьПараметр("ДатаД",Дата("20250101"));     
	
	//	Запрос.УстановитьПараметр("Об",Структура.Документ);
	Результат = Запрос.Выполнить().Выгрузить();
	Для каждого стр из Результат Цикл   
		СК = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(стр); 
		Бывший = СК.Значение.Ссылка;
		УИДТ = Строка(Бывший.УникальныйИдентификатор());      
		УИД1 = ТабСоответствия.Получить(УИДТ);  
		Если УИД1 = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЧтоУ1 = Новый УникальныйИдентификатор(УИД1);   
		НовыйКПС = Справочники.КлассификационныеПризнакиСчетов.ПолучитьСсылку(ЧтоУ1);
		
		СК.Вставить("Значение",НовыйКПС);
		
		НаборЗаписей = РегистрыСведений.ЗначенияКолонокДополнительныхТабличныхЧастей.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(СК.Объект); 
		НаборЗаписей.Отбор.КолонкаТабличнойЧасти.Установить(СК.КолонкаТабличнойЧасти);      
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда 
			Запись =  НаборЗаписей[0];    
			ЗаполнитьЗначенияСвойств(Запись,СК);  
			НаборЗаписей.Записать(Истина);
		КонецЕсли;	
		
		НаборЗаписей = РегистрыБухгалтерии.ЖурналПроводокЕПСБУ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(СК.Объект); 
		//	НаборЗаписей.Отбор.КПС.Установить(УИДТ);      
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() Тогда  
			Для каждого стр1 из НаборЗаписей Цикл 
				Если НЕ стр1.КПСКт  =  Бывший Тогда  
					Продолжить;
				КонецЕсли;
				стр1.КПСКт  =  НовыйКПС;
				//ЗаполнитьЗначенияСвойств(стр1,СК);  
				НаборЗаписей.Записать(Истина);      
			КонецЦикла;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры
